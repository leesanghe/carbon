package com.carina.cbs.board.actboard.web;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;

import org.springframework.web.bind.annotation.PostMapping;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.carina.cbs.board.actboard.service.ActBoardService;
import com.carina.cbs.board.actboard.vo.ActBoardVO;
import com.carina.cbs.board.freeboard.vo.FreeBoardVO;
import com.carina.cbs.board.freeboard.vo.ReplyVO;
import com.carina.cbs.member.vo.MemberVO;

/**
 * Class Name  : ActBoardController
 * Author      : ParkGeunHye
 * Created Date: 2023. 11. 21.
 * Version: 1.0
 * Purpose:   
 * Description: 
 */
@Controller
public class ActBoardController {
	@Autowired
	ActBoardService actboardService;
	
	@RequestMapping("/actboard")
	public String actboard(Model model, HttpSession session) {
		List<ActBoardVO> actboardList = actboardService.getactboardList();
		model.addAttribute("actboardList", actboardList);
		return "/actboard";
	}
	
	@RequestMapping("/actboardwrite")
	public String actboardwrite(HttpSession session, Model model, HttpServletRequest request) {
		if(session.getAttribute("login") == null){

			return "redirect:/loginView";
	}
		return "/actboardwrite";
	}
	


	
	@RequestMapping("/actboardwriteDo")
	public String actboardwrite(ActBoardVO actboard, HttpSession session) throws Exception{
		MemberVO login = (MemberVO) session.getAttribute("login");
		actboard.setMemId(login.getMemId());
		actboardService.actboardwrite(actboard);
		
		return "redirect:/actboard";
	}
	
	@RequestMapping("/actdetail") 
	 public String actdetail(Model model, int actBoardNo) throws Exception{ 
		 ActBoardVO actboardVO =actboardService.getActBoard(actBoardNo); 
		 model.addAttribute("actboardVO", actboardVO);
		 
	 return "/actdetail"; 
	 }
	 
	
	/*
	 * @RequestMapping("/actdetail") public String actdetail(Model model,
	 * HttpServletRequest request) throws Exception { String actBoardNoString =
	 * request.getParameter("actBoardNo");
	 * 
	 * if (actBoardNoString != null && !actBoardNoString.isEmpty()) { try { int
	 * actBoardNo = Integer.parseInt(actBoardNoString); ActBoardVO actboardVO =
	 * actboardService.getActBoard(actBoardNo); System.out.println(actboardVO);
	 * model.addAttribute("actboard", actboardVO); } catch (NumberFormatException e)
	 * { // actBoardNo를 숫자로 변환할 수 없는 경우 처리 e.printStackTrace(); // 또는 로깅 } } else {
	 * // actBoardNo가 null 또는 빈 문자열인 경우 처리 }
	 * 
	 * return "/actdetail"; }
	 */



	
//	@RequestMapping("/actdetail")
//	public String actdetail(Model model, int actBoardNo) throws Exception{
//		ActBoardVO actboardVO = actboardService.getActBoard(actBoardNo);
//		System.out.println(actboardVO);
//		model.addAttribute("actboard",actboardVO);
//		
//		return"/actdetail";
//		
//	}

	
	// 사진부분 수정
	
	
	
	//실천일지 사진파일 업로드
	
	@PostMapping("/uploadImage")
	public ResponseEntity<?> uploadImage(@RequestParam("file") MultipartFile uploadImage,
							 ActBoardVO actboardVO,
	                                     HttpSession session) throws Exception {
		System.out.println(actboardVO);
	    // 웹 전근경로
	    String webPath = "/resources/uploadImage/";
	    // 서버 저장 경로
	    String folderPath = session.getServletContext().getRealPath(webPath);
	    
//	    ActBoardVO actboardVO = new ActBoardVO();
	    actboardVO.setMemId(((MemberVO) session.getAttribute("login")).getMemId());
	
	    
	    String imgPath = actboardService.uploadProfile(actboardVO, folderPath, webPath, uploadImage);
	    
	    Map<String, Object> response = new HashMap<>();
	    response.put("message", "success");
	    response.put("imagePath", imgPath);
	    
	    return new ResponseEntity<>(response, HttpStatus.OK);
	    
	}


	

	 
	

}


