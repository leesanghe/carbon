/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-12-23 06:55:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.cbs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:containsIgnoreCase", org.apache.taglibs.standard.functions.Functions.class, "containsIgnoreCase", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/inc/footer.jsp", Long.valueOf(1701994853679L));
    _jspx_dependants.put("jar:file:/C:/tools/teamproj/workspace_proj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/carina/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/tools/teamproj/workspace_proj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/carina/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1694412638883L));
    _jspx_dependants.put("/WEB-INF/inc/top.jsp", Long.valueOf(1703312916882L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/html2canvas.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jspdf.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("        /* Add your styles here */\r\n");
      out.write("        .selected {\r\n");
      out.write("            background-color: #d4edda; /* Change the background color for selected cells if desired */\r\n");
      out.write("        }\r\n");
      out.write("        strong#information{\r\n");
      out.write("        	background-color: #d4edda;\r\n");
      out.write("        }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body id=\"test\">\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("<link rel=\"canonical\"\r\n");
      out.write("	href=\"https://themesberg.com/product/ui-kits/neumorphism-ui/\">\r\n");
      out.write("<!--  Social tags -->\r\n");
      out.write("<meta name=\"keywords\"\r\n");
      out.write("	content=\"neumorphism, neumorphism ui, neomorphism, neomorphism ui, neomorphism css, neumorphism css, neumorph, neumorphic, design system, login, form, table, tables, card, cards, navbar, modal, icons, icons, map, chat, carousel, menu, datepicker, gallery, slider, date, social, dropdown, search, tab, nav, footer, date picker, forms, tabs, time, button, select, input, timeline, cart, about us, account, log in, blog, profile, portfolio, landing page, ecommerce, shop, landing, register, app, contact, one page, sign up, signup, store, bootstrap 4, bootstrap4, dashboard, bootstrap 4 dashboard, bootstrap 4 design, bootstrap 4 system, bootstrap 4, bootstrap 4 uit kit, bootstrap 4 kit, themesberg, html kit, html css template, web template, bootstrap, bootstrap 4, css3 template, frontend, responsive bootstrap template, bootstrap ui kit, responsive ui kit\">\r\n");
      out.write("<meta name=\"description\"\r\n");
      out.write("	content=\"Start developing neumorphic web applications and pages using Neumorphism UI. It features over 100 individual components and 5 example pages.\">\r\n");
      out.write("<!-- Schema.org markup for Google+ -->\r\n");
      out.write("<meta itemprop=\"name\" content=\"Neumorphism UI by Themesberg\">\r\n");
      out.write("<meta itemprop=\"description\"\r\n");
      out.write("	content=\"Start developing neumorphic web applications and pages using Neumorphism UI. It features over 100 individual components and 5 example pages.\">\r\n");
      out.write("<meta itemprop=\"image\"\r\n");
      out.write("	content=\"https://themesberg.s3.us-east-2.amazonaws.com/public/products/neumorphism-ui/neumorphism-thumbnail.jpg\">\r\n");
      out.write("<!-- Twitter Card data -->\r\n");
      out.write("<meta name=\"twitter:card\" content=\"product\">\r\n");
      out.write("<meta name=\"twitter:site\" content=\"@themesberg\">\r\n");
      out.write("<meta name=\"twitter:title\" content=\"Neumorphism UI by Themesberg\">\r\n");
      out.write("<meta name=\"twitter:description\"\r\n");
      out.write("	content=\"Start developing neumorphic web applications and pages using Neumorphism UI. It features over 100 individual components and 5 example pages.\">\r\n");
      out.write("<meta name=\"twitter:creator\" content=\"@themesberg\">\r\n");
      out.write("<meta name=\"twitter:image\"\r\n");
      out.write("	content=\"https://themesberg.s3.us-east-2.amazonaws.com/public/products/neumorphism-ui/neumorphism-thumbnail.jpg\">\r\n");
      out.write("<!-- Open Graph data -->\r\n");
      out.write("<meta property=\"fb:app_id\" content=\"214738555737136\">\r\n");
      out.write("<meta property=\"og:title\" content=\"Neumorphism UI by Themesberg\">\r\n");
      out.write("<meta property=\"og:type\" content=\"article\">\r\n");
      out.write("<meta property=\"og:url\"\r\n");
      out.write("	content=\"https://demo.themesberg.com/neumorphism-ui/\">\r\n");
      out.write("<meta property=\"og:image\"\r\n");
      out.write("	content=\"https://themesberg.s3.us-east-2.amazonaws.com/public/products/neumorphism-ui/neumorphism-thumbnail.jpg\">\r\n");
      out.write("<meta property=\"og:description\"\r\n");
      out.write("	content=\"Start developing neumorphic web applications and pages using Neumorphism UI. It features over 100 individual components and 5 example pages.\">\r\n");
      out.write("<meta property=\"og:site_name\" content=\"Themesberg\">\r\n");
      out.write("<!-- Favicon -->\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"120x120\"\r\n");
      out.write("	href=\"assets/img/favicon/apple-touch-icon.png\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\r\n");
      out.write("	href=\"assets/img/favicon/favicon-32x32.png\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\r\n");
      out.write("	href=\"assets/img/favicon/favicon-16x16.png\">\r\n");
      out.write("<link rel=\"manifest\" href=\"assets/img/favicon/site.webmanifest\">\r\n");
      out.write("<link rel=\"mask-icon\" href=\"assets/img/favicon/safari-pinned-tab.svg\"\r\n");
      out.write("	color=\"#FFFFFF\">\r\n");
      out.write("<meta name=\"msapplication-TileColor\" content=\"#FFFFFF\">\r\n");
      out.write("<meta name=\"theme-color\" content=\"#FFFFFF\">\r\n");
      out.write("<!-- Fontawesome -->\r\n");
      out.write("<link type=\"text/css\"\r\n");
      out.write("	href=\"resources/vendor/@fortawesome/fontawesome-free/css/all.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<!-- Pixel CSS -->\r\n");
      out.write("<link type=\"text/css\" href=\"css/neumorphism.css\" rel=\"stylesheet\">\r\n");
      out.write("<!-- NOTICE: You can use the _analytics.html partial to include production code specific code & trackers -->\r\n");
      out.write("<!-- Global site tag (gtag.js) - Google Analytics -->\r\n");
      out.write("<script async\r\n");
      out.write("	src=\"https://www.googletagmanager.com/gtag/js?id=UA-141734189-1\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	window.dataLayer = window.dataLayer || [];\r\n");
      out.write("	function gtag() {\r\n");
      out.write("		dataLayer.push(arguments);\r\n");
      out.write("	}\r\n");
      out.write("	gtag('js', new Date());\r\n");
      out.write("	gtag('config', 'UA-141734189-1');\r\n");
      out.write("</script>\r\n");
      out.write("<!-- Navigation-->\r\n");
      out.write("<!-- 네비 바 시작 -->\r\n");
      out.write("<nav id=\"navbar-main\" aria-label=\"Primary navigation\"\r\n");
      out.write("	class=\"navbar navbar-main navbar-expand-lg navbar-theme-primary headroom navbar-light\">\r\n");
      out.write("	<!-- 로고 넣는 부분 -->\r\n");
      out.write("	<div class=\"container position-relative\">\r\n");
      out.write("		<a\r\n");
      out.write("			class=\"navbar-brand shadow-soft py-2 px-3 rounded border border-light mr-lg-4\"\r\n");
      out.write("			href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">CARINA</a>\r\n");
      out.write("		<div class=\"navbar-collapse collapse\" id=\"navbar_global\">\r\n");
      out.write("			<div class=\"navbar-collapse-header\">\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"col-6 collapse-brand\"></div>\r\n");
      out.write("					<div class=\"col-6 collapse-close\">\r\n");
      out.write("						<a href=\"#navbar_global\" class=\"fas fa-times\"\r\n");
      out.write("							data-toggle=\"collapse\" data-target=\"#navbar_global\"\r\n");
      out.write("							aria-controls=\"navbar_global\" aria-expanded=\"false\" title=\"close\"\r\n");
      out.write("							aria-label=\"Toggle navigation\"></a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<ul class=\"navbar-nav  navbar-nav-hover align-items-lg-center \">\r\n");
      out.write("				<li class=\"nav-item shadow-soft rounded\"><a\r\n");
      out.write("					href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" class=\"nav-link\" data-toggle=\"\"><span\r\n");
      out.write("						class=\"nav-link-inner-text\">지역별 탄소 배출량 </span></a></li>\r\n");
      out.write("				<li class=\"nav-item shadow-soft rounded\"><a\r\n");
      out.write("					href=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\" class=\"nav-link\" data-toggle=\"\"><span\r\n");
      out.write("						class=\"nav-link-inner-text\">환경 MBTI</span></a></li>\r\n");
      out.write("				<li class=\"nav-item shadow-soft rounded\"><a\r\n");
      out.write("					href=\"");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("\" class=\"nav-link\" data-toggle=\"\"><span\r\n");
      out.write("						class=\"nav-link-inner-text\">탄소 배출량 시뮬레이터</span></a></li>\r\n");
      out.write("				<li class=\"nav-item dropdown shadow-soft rounded\"><a href=\"#\"\r\n");
      out.write("					class=\"nav-link\" data-toggle=\"dropdown\"><span\r\n");
      out.write("						class=\"nav-link-inner-text\">전력 예측 모델</span> <span\r\n");
      out.write("						class=\"fas fa-angle-down nav-link-arrow ml-2\"></span></a>\r\n");
      out.write("					<ul class=\"dropdown-menu\">\r\n");
      out.write("						<li><a class=\"dropdown-item\"\r\n");
      out.write("							href=\"");
      if (_jspx_meth_c_005furl_005f4(_jspx_page_context))
        return;
      out.write("\">우리 동네 전력량 예측하기</a></li>\r\n");
      out.write("						<li><a class=\"dropdown-item\"\r\n");
      out.write("							href=\"");
      if (_jspx_meth_c_005furl_005f5(_jspx_page_context))
        return;
      out.write("\">탄소 중립 솔루션</a></li>\r\n");
      out.write("					</ul></li>\r\n");
      out.write("				<li class=\"nav-item dropdown shadow-soft rounded\"><a href=\"#\"\r\n");
      out.write("					class=\"nav-link shadow-soft rounded\" data-toggle=\"dropdown\"><span\r\n");
      out.write("						class=\"nav-link-inner-text\">게시판</span> <span\r\n");
      out.write("						class=\"fas fa-angle-down nav-link-arrow ml-2\"></span></a>\r\n");
      out.write("					<ul class=\"dropdown-menu\">\r\n");
      out.write("						<li><a class=\"dropdown-item\"\r\n");
      out.write("							href=\"");
      if (_jspx_meth_c_005furl_005f6(_jspx_page_context))
        return;
      out.write("\">실천 일지</a></li>\r\n");
      out.write("						<li><a class=\"dropdown-item\" href=\"");
      if (_jspx_meth_c_005furl_005f7(_jspx_page_context))
        return;
      out.write("\">환경\r\n");
      out.write("								뉴스</a></li>\r\n");
      out.write("						<li><a class=\"dropdown-item\"\r\n");
      out.write("							href=\"");
      if (_jspx_meth_c_005furl_005f8(_jspx_page_context))
        return;
      out.write("\">자유 게시판</a></li>\r\n");
      out.write("					</ul></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		<!-- 로그인 구현시 세션 정보에 따라 다르게 보이게 설정해야 함  -->\r\n");
      out.write("\r\n");
      out.write("		<div class=\"d-flex align-items-center\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<button class=\"navbar-toggler ml-2\" type=\"button\"\r\n");
      out.write("				data-toggle=\"collapse\" data-target=\"#navbar_global\"\r\n");
      out.write("				aria-controls=\"navbar_global\" aria-expanded=\"false\"\r\n");
      out.write("				aria-label=\"Toggle navigation\">\r\n");
      out.write("\r\n");
      out.write("			</button>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	// 로컬 스토리지에서 값을 가져오는 함수\r\n");
      out.write("	function getResultFromLocalStorage() {\r\n");
      out.write("	    var result = JSON.parse(localStorage.getItem('calculationResult'));\r\n");
      out.write("	    return result;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("	\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("    	// 로컬 스토리지에 값을 저장하는 함수\r\n");
      out.write("    	function saveToLocalStorage(key, value) {\r\n");
      out.write("    	    localStorage.setItem(key, JSON.stringify(value));\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("    	\r\n");
      out.write("    	// 계산 결과를 로컬 스토리지에 저장\r\n");
      out.write("    	function saveResultToLocalStorage() {\r\n");
      out.write("    		\r\n");
      out.write("    		\r\n");
      out.write("    		\r\n");
      out.write("    		\r\n");
      out.write("    	    // 다른 필요한 값들도 추가\r\n");
      out.write("    	    var result = {\r\n");
      out.write("    	        	//사용자솔루션선택 총요금 총탄소감소량\r\n");
      out.write("    	        	 globalTotalCost : globalTotalCost,\r\n");
      out.write("    	        	 globalTotalCo2 : globalTotalCo2,\r\n");
      out.write("    	        	\r\n");
      out.write("    	        	//사용자이름전역변수로\r\n");
      out.write("    	        	 nameInput : nameInput,\r\n");
      out.write("    	             // 주거형태 선택값 가져오기\r\n");
      out.write("    	             housingType : housingType,\r\n");
      out.write("\r\n");
      out.write("    	             // 거주면적 선택값 가져오기\r\n");
      out.write("    	             residenceArea : residenceArea,\r\n");
      out.write("\r\n");
      out.write("    	             // 거주인원 선택값 가져오기\r\n");
      out.write("    	             people : people,\r\n");
      out.write("    	        	\r\n");
      out.write("    	        	//솔루션선택했을때 솔루션값뺀 전기,가스,수도별 총합\r\n");
      out.write("    	    		 totalReduce : totalReduce,\r\n");
      out.write("    	    		 wReduce : wReduce,\r\n");
      out.write("    	    		 eReduce : eReduce,\r\n");
      out.write("    	    		 gReduce : gReduce,\r\n");
      out.write("\r\n");
      out.write("    	        	\r\n");
      out.write("    	        	//다른가구평균 값들\r\n");
      out.write("    	        	 totalAmount : totalAmount,//아작스로 값가져옴\r\n");
      out.write("    	             totalTree : totalTree,//아작스로 값 가져옴\r\n");
      out.write("    	         	 electricity : electricity,//아작스 값가져옴\r\n");
      out.write("    	         	 water : water,//아작스 값가져옴\r\n");
      out.write("    	         	 gas : gas,//아작스 값가져옴\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    				//사용자계산값\r\n");
      out.write("    	             electricityEmission : electricityEmission,\r\n");
      out.write("    	             gasEmission : gasEmission,\r\n");
      out.write("    	             waterEmission : waterEmission,\r\n");
      out.write("    	             totalTreeConversion : totalTreeConversion,\r\n");
      out.write("    	    		 totalCarbonEmission : totalCarbonEmission,\r\n");
      out.write("    	    	    //선택지에  따른 전기 , 가스 , 수도별 탄소배출량 과 요금합계 \r\n");
      out.write("    	    	    	\r\n");
      out.write("    	    	   	 totalCo2g : totalCo2g,\r\n");
      out.write("    	    	   	 totalCostg : totalCostg,\r\n");
      out.write("    	    	    	\r\n");
      out.write("    	    	     totalCo2w : totalCo2w,\r\n");
      out.write("    	    	     totalCostw: totalCostw,\r\n");
      out.write("    	    	    	\r\n");
      out.write("    	    	     totalCo2e : totalCo2e,\r\n");
      out.write("    	    	     totalCoste: totalCoste,\r\n");
      out.write("    	    	     \r\n");
      out.write("    	    	     \r\n");
      out.write("    	    		 selectedCellContentse : selectedCellContentse, //전기탭의 솔루션 내용 배열저장\r\n");
      out.write("    	    		 selectedCellContentsg : selectedCellContentsg, //가스탭의 솔루션 내용 배열저장\r\n");
      out.write("    	    		 selectedCellContentsw : selectedCellContentsw, //수도탭의 솔루션 내용 배열저장\r\n");
      out.write("    	        \r\n");
      out.write("    	    };\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    	    saveToLocalStorage('sendReport', result);\r\n");
      out.write("    	}\r\n");
      out.write("    	//선택지에  따른 전기 , 가스 , 수도별 탄소배출량 과 요금합계 \r\n");
      out.write("    	\r\n");
      out.write("    	var totalCo2g;\r\n");
      out.write("    	var totalCostg;\r\n");
      out.write("    	\r\n");
      out.write("    	var totalCo2w;\r\n");
      out.write("    	var totalCostw;\r\n");
      out.write("    	\r\n");
      out.write("    	var totalCo2e;\r\n");
      out.write("    	var totalCoste;\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("    	//사용자솔루션선택 총요금 총탄소감소량\r\n");
      out.write("    	var globalTotalCost;\r\n");
      out.write("    	var globalTotalCo2;\r\n");
      out.write("    	\r\n");
      out.write("    	//사용자이름전역변수로\r\n");
      out.write("    	var nameInput;\r\n");
      out.write("        \r\n");
      out.write("        // 주거형태 선택값 가져오기\r\n");
      out.write("        var housingType; \r\n");
      out.write("\r\n");
      out.write("        // 거주면적 선택값 가져오기\r\n");
      out.write("        var residenceArea;\r\n");
      out.write("\r\n");
      out.write("        // 거주인원 선택값 가져오기\r\n");
      out.write("        var people;\r\n");
      out.write("    	\r\n");
      out.write("    	//솔루션선택했을때 솔루션값뺀 전기,가스,수도별 총합\r\n");
      out.write("		var totalReduce = 0;\r\n");
      out.write("		var wReduce = 0;\r\n");
      out.write("		var eReduce = 0;\r\n");
      out.write("		var gReduce = 0;\r\n");
      out.write("\r\n");
      out.write("    	\r\n");
      out.write("    	//다른가구평균 값들\r\n");
      out.write("    	var totalAmount = 0;//아작스로 값가져옴\r\n");
      out.write("        var totalTree = 0;//아작스로 값 가져옴\r\n");
      out.write("     	var electricity = 0;//아작스 값가져옴\r\n");
      out.write("     	var water = 0;//아작스 값가져옴\r\n");
      out.write("     	var gas = 0;//아작스 값가져옴\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        // 사용자가 입력한값들\r\n");
      out.write("        var storedResult = getResultFromLocalStorage();\r\n");
      out.write("        var electricityEmission = storedResult.electricityEmission;\r\n");
      out.write("        var gasEmission = storedResult.gasEmission;\r\n");
      out.write("        var waterEmission = storedResult.waterEmission;\r\n");
      out.write("        var totalTreeConversion = storedResult.totalTreeConversion\r\n");
      out.write("		var totalCarbonEmission = storedResult.totalCarbonEmission\r\n");
      out.write("\r\n");
      out.write("        // 가져온 값이 있다면 콘솔에 출력\r\n");
      out.write("        if (storedResult) {\r\n");
      out.write("            console.log('전기 Emission:', storedResult.electricityEmission);\r\n");
      out.write("            console.log('수도 Conversion:', storedResult.waterEmission);\r\n");
      out.write("            console.log('가스 Conversion:', storedResult.gasEmission);\r\n");
      out.write("            console.log(storedResult.totalTreeConversion)\r\n");
      out.write("            console.log(storedResult.totalCarbonEmission)\r\n");
      out.write("            // 다른 필요한 값들도 출력\r\n");
      out.write("        } else {\r\n");
      out.write("            console.log('No stored result found.');\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        console.log('Local Storage Contents:', localStorage)\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("        // 저장 버튼 클릭 시 이벤트 처리\r\n");
      out.write("        $('#saveButton').on('click', function() {\r\n");
      out.write("            // 이름(별명) 입력값 가져오기\r\n");
      out.write("            nameInput = $('#exampleInputEmail67').val();\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            // 주거형태 선택값 가져오기\r\n");
      out.write("            housingType = $('input[name=\"housingType\"]:checked').val();\r\n");
      out.write("\r\n");
      out.write("            // 거주면적 선택값 가져오기\r\n");
      out.write("            residenceArea = $('input[name=\"residenceArea\"]:checked').val();\r\n");
      out.write("\r\n");
      out.write("            // 거주인원 선택값 가져오기\r\n");
      out.write("            people = $('input[name=\"people\"]:checked').val();\r\n");
      out.write("\r\n");
      out.write("            // 개인정보 동의 여부 확인\r\n");
      out.write("            var isAgreed = $('#defaultCheck222').prop('checked');\r\n");
      out.write("            \r\n");
      out.write("            if(isAgreed){\r\n");
      out.write("\r\n");
      out.write("            // 콘솔에 출력\r\n");
      out.write("            console.log(\"이름(별명): \" + nameInput);\r\n");
      out.write("            console.log(\"주거형태: \" + housingType);\r\n");
      out.write("            console.log(\"거주면적: \" + residenceArea);\r\n");
      out.write("            console.log(\"거주인원: \" + people);\r\n");
      out.write("            console.log(\"개인정보 수집 및 이용에 동의함: \" + isAgreed);\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type: \"POST\",\r\n");
      out.write("                url: '");
      if (_jspx_meth_c_005furl_005f17(_jspx_page_context))
        return;
      out.write("',  // 실제 URL은 프로젝트에 맞게 변경해야 합니다.\r\n");
      out.write("                contentType: \"application/json\",\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                    house: housingType,\r\n");
      out.write("                    area: residenceArea,\r\n");
      out.write("                    personnel: people\r\n");
      out.write("                }),\r\n");
      out.write("                success: function (data) {\r\n");
      out.write("                    // 서버 응답에 따른 동작 수행\r\n");
      out.write("                    console.log(data);\r\n");
      out.write("                    \r\n");
      out.write("                    //배열의 첫번째값 가져오기\r\n");
      out.write("                    var Object = data[0];\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                     totalAmount = Object.totalAmount;\r\n");
      out.write("                     totalTree = Object.totalTree;\r\n");
      out.write("                     water = Object.water;\r\n");
      out.write("                     electricity = Object.electricity;\r\n");
      out.write("                     gas = Object.gas;\r\n");
      out.write("                    \r\n");
      out.write("                    //결과를 화면에 출력\r\n");
      out.write("                    var resultContainer = $(\"#resultContainer\")\r\n");
      out.write("                    resultContainer.html(\"\"); // 결과를 초기화\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    // 결과에 대한 추가 정보를 화면에 추가\r\n");
      out.write("                    var additionalInfo; \r\n");
      out.write("                    \r\n");
      out.write("                    if(storedResult.totalCarbonEmission >  totalAmount){\r\n");
      out.write("                    	 var moreEmission = Math.round((storedResult.totalCarbonEmission - totalAmount) * 10) / 10; // 반올림\r\n");
      out.write("                    additionalInfo =\"<strong id='information'>\" + nameInput + \"</strong> 님 가정의  이산화탄소 배출량은 총 \" + \"<strong id='information'>\" +storedResult.totalCarbonEmission +\"kg</strong>  이며, 비슷한 다른 가정 평균 \"\r\n");
      out.write("                                   +\"<strong  id='information'>\"+ totalAmount +\"kg</strong> 보다   <strong  id='information'>\"+  moreEmission +\"kg </strong> 더 많이 배출하고 있습니다. <strong  id='information'>\" + storedResult.totalCarbonEmission +\r\n");
      out.write("                                    \" kg</strong>의 이산화탄소를 상쇄시키기 위해서는 <strong  id='information'>\" + storedResult.totalTreeConversion + \"</strong> 그루의 소나무를 심어야 합니다.\";\r\n");
      out.write("                }else{\r\n");
      out.write("                	 var lessEmission = Math.round((totalAmount -storedResult.totalCarbonEmission) * 10) / 10; // 반올림\r\n");
      out.write("                    additionalInfo = \"<strong id='information'>\" + nameInput +  \"</strong> 님 가정의 이산화탄소 배출량은 총  <strong  id='information'>\" + storedResult.totalCarbonEmission + \"kg</strong> 이며,비슷한 다른 가정 평균 <strong  id='information'>\" \r\n");
      out.write("                   	 + totalAmount + \"kg</strong> 보다  <strong  id='information'>\" + lessEmission  +\"kg</strong> 더  적게 배출하고 있습니다. <strong  id='information'>\" + storedResult.totalCarbonEmission +\r\n");
      out.write("                    \"kg</strong>의 이산화탄소를 상쇄시키기 위해서는  <strong  id='information'>\" + storedResult.totalTreeConversion + \"</strong> 그루의 소나무를 심어야 합니다.\";\r\n");
      out.write("                }\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                    // 결과에 대한 추가 정보를 해당 ID를 가진 요소에 업데이트\r\n");
      out.write("                    $(\"#carbonEmissionInfo\").html(additionalInfo);\r\n");
      out.write("                    \r\n");
      out.write("                    // 첫 줄에도 이름 동적 업데이트\r\n");
      out.write("                    $('span.card-text.small').html(nameInput + '님의 이산화탄소 발생량 통계입니다.');\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                    // 그래프를 그리기 위한 데이터\r\n");
      out.write("                    var totalData = {\r\n");
      out.write("                        labels: ['사용자탄소발생', '다른집탄소발생', '사용자나무환산', '다른집나무환산'],\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            data: [totalCarbonEmission, totalAmount, totalTreeConversion, totalTree],\r\n");
      out.write("                            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)'],\r\n");
      out.write("                            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)'],\r\n");
      out.write("                            borderWidth: 1\r\n");
      out.write("                        }]\r\n");
      out.write("                    };\r\n");
      out.write("\r\n");
      out.write("                    // 캔버스 요소 가져오기\r\n");
      out.write("                    var totalChartCtx = document.getElementById('totalChart').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("                    var totalChart = new Chart(totalChartCtx, {\r\n");
      out.write("                        type: 'bar',\r\n");
      out.write("                        data: totalData,\r\n");
      out.write("                        options: {\r\n");
      out.write("                            responsive: false,\r\n");
      out.write("                            plugins: {\r\n");
      out.write("                                legend: {\r\n");
      out.write("                                    display: false\r\n");
      out.write("                                },\r\n");
      out.write("                                tooltips:{\r\n");
      out.write("                                	enabled: true\r\n");
      out.write("                                },\r\n");
      out.write("                                datalabels: {\r\n");
      out.write("                                	display : true,\r\n");
      out.write("                                    anchor: 'end',\r\n");
      out.write("                                    align: 'end',\r\n");
      out.write("                                    formatter: function(value, ctx){\r\n");
      out.write("                                        return value.toFixed(2);\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                    // 그래프를 그리기 위한 데이터\r\n");
      out.write("                    var electricityData = {\r\n");
      out.write("                        labels: ['우리집', '다른집'],\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            data: [electricityEmission, electricity],\r\n");
      out.write("                            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)'],\r\n");
      out.write("                            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\r\n");
      out.write("                            borderWidth: 1\r\n");
      out.write("                        }]\r\n");
      out.write("                    };\r\n");
      out.write("\r\n");
      out.write("                    // 캔버스 요소 가져오기\r\n");
      out.write("                    var electricityChartCtx = document.getElementById('electricityChart').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("                    // Chart.js를 이용하여 그래프 그리기\r\n");
      out.write("                    var electricityChart = new Chart(electricityChartCtx, {\r\n");
      out.write("                        type: 'bar',\r\n");
      out.write("                        data: electricityData,\r\n");
      out.write("                        options: {\r\n");
      out.write("                            responsive: false,\r\n");
      out.write("                            plugins: {\r\n");
      out.write("                                legend: {\r\n");
      out.write("                                    display: false\r\n");
      out.write("                                },\r\n");
      out.write("                                datalabels: {\r\n");
      out.write("                                	display : true,\r\n");
      out.write("                                    anchor: 'end',\r\n");
      out.write("                                    align: 'end',\r\n");
      out.write("                                    formatter: function(value, ctx){\r\n");
      out.write("                                        return value.toFixed(2);\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    });    \r\n");
      out.write("                    \r\n");
      out.write("                    // 그래프를 그리기 위한 데이터\r\n");
      out.write("                    var gasData = {\r\n");
      out.write("                        labels: ['우리집', '다른집'],\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            data: [gasEmission, gas],\r\n");
      out.write("                            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)'],\r\n");
      out.write("                            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\r\n");
      out.write("                            borderWidth: 1\r\n");
      out.write("                        }]\r\n");
      out.write("                    };\r\n");
      out.write("\r\n");
      out.write("                    // 캔버스 요소 가져오기\r\n");
      out.write("                    var gasChartCtx = document.getElementById('gasChart').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("                    // Chart.js를 이용하여 그래프 그리기\r\n");
      out.write("                    \r\n");
      out.write("                    var gasChart = new Chart(gasChartCtx, {\r\n");
      out.write("                        type: 'bar',\r\n");
      out.write("                        data: gasData,\r\n");
      out.write("                        options: {\r\n");
      out.write("                            responsive: false,\r\n");
      out.write("                            plugins: {\r\n");
      out.write("                                legend: {\r\n");
      out.write("                                    display: false\r\n");
      out.write("                                },\r\n");
      out.write("                                datalabels: {\r\n");
      out.write("                                	display : true,\r\n");
      out.write("                                    anchor: 'end',\r\n");
      out.write("                                    align: 'end',\r\n");
      out.write("                                    formatter: function(value, ctx){\r\n");
      out.write("                                        return value.toFixed(2);\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    });    \r\n");
      out.write("                    \r\n");
      out.write("                    // 그래프를 그리기 위한 데이터\r\n");
      out.write("                    var waterData = {\r\n");
      out.write("                        labels: ['우리집', '다른집'],\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            data: [waterEmission, water],\r\n");
      out.write("                            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)'],\r\n");
      out.write("                            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\r\n");
      out.write("                            borderWidth: 1\r\n");
      out.write("                        }]\r\n");
      out.write("                    };\r\n");
      out.write("\r\n");
      out.write("                    // 캔버스 요소 가져오기\r\n");
      out.write("                    var waterChartCtx = document.getElementById('waterChart').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("                    // Chart.js를 이용하여 그래프 그리기\r\n");
      out.write("                    var waterChart = new Chart(waterChartCtx, {\r\n");
      out.write("                        type: 'bar',\r\n");
      out.write("                        data: waterData,\r\n");
      out.write("                        options: {\r\n");
      out.write("                            responsive: false,\r\n");
      out.write("                            plugins: {\r\n");
      out.write("                                legend: {\r\n");
      out.write("                                    display: false\r\n");
      out.write("                                },\r\n");
      out.write("                                datalabels: {\r\n");
      out.write("                                	display : true,\r\n");
      out.write("                                    anchor: 'end',\r\n");
      out.write("                                    align: 'end',\r\n");
      out.write("                                    formatter: function(value, ctx){\r\n");
      out.write("                                        return value.toFixed(2);\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    });    \r\n");
      out.write("                    \r\n");
      out.write("                },\r\n");
      out.write("                error: function (error) {\r\n");
      out.write("                    console.error(error);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("            $('#tabs-icons-text-2-tab').tab('show');\r\n");
      out.write("           \r\n");
      out.write("            }else{\r\n");
      out.write("            	alert(\"개인정보 수집 및 이용에 동의해야 합니다.\")\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("     		\r\n");
      out.write("       });\r\n");
      out.write("        \r\n");
      out.write("        // Chart.js를 이용하여 원 그래프를 그리는 코드\r\n");
      out.write("        var ctxDoughnut = document.getElementById('myDoughnutChart').getContext('2d');\r\n");
      out.write("        var myDoughnutChart = new Chart(ctxDoughnut, {\r\n");
      out.write("            type: 'doughnut',\r\n");
      out.write("            data: {\r\n");
      out.write("                labels: ['전기', '가스', '수도'], // 그래프의 라벨\r\n");
      out.write("                datasets: [{\r\n");
      out.write("                    data: [electricityEmission, gasEmission, waterEmission], // 그래프에 표시될 데이터\r\n");
      out.write("                    backgroundColor: [\r\n");
      out.write("                        'rgba(255, 99, 132, 0.8)',\r\n");
      out.write("                        'rgba(54, 162, 235, 0.8)',\r\n");
      out.write("                        'rgba(255, 206, 86, 0.8)'\r\n");
      out.write("                    ],\r\n");
      out.write("                    borderColor: [\r\n");
      out.write("                        'rgba(255, 99, 132, 1)',\r\n");
      out.write("                        'rgba(54, 162, 235, 1)',\r\n");
      out.write("                        'rgba(255, 206, 86, 1)'\r\n");
      out.write("                    ],\r\n");
      out.write("                    borderWidth: 1\r\n");
      out.write("                }]\r\n");
      out.write("            },\r\n");
      out.write("            options: {\r\n");
      out.write("                cutout: '70%', // 중앙에 구멍을 내기 위한 옵션\r\n");
      out.write("                responsive: false,\r\n");
      out.write("                plugins: {\r\n");
      out.write("                    legend: {\r\n");
      out.write("                        position: 'bottom' // 범례 위치\r\n");
      out.write("                        \r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }); \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        var selectedDatae = []; // 전기 데이터 저장 배열\r\n");
      out.write("        var selectedDatag = []; // 가스 데이터 저장배열\r\n");
      out.write("        var selectedDataw = []; // 수도 데이터 저장배열\r\n");
      out.write("        \r\n");
      out.write("		var selectedCellContentse = []; //전기탭의 솔루션 내용 배열저장\r\n");
      out.write("		var selectedCellContentsg = []; //가스탭의 솔루션 내용 배열저장\r\n");
      out.write("		var selectedCellContentsw = []; //수도탭의 솔루션 내용 배열저장\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        // 테이블의 각 셀에 이벤트 리스너 추가\r\n");
      out.write("        $('#electricityTable').on('click', '.clickable-cell', function () {\r\n");
      out.write("            var cellContent = $(this).text(); // 셀의 내용을 가져옵니다\r\n");
      out.write("        	 //alert($(this).attr(\"data-a\"));\r\n");
      out.write("        	 //alert($(this).attr(\"data-b\"));\r\n");
      out.write("            // 선택한 셀에 'selected' 클래스 토글\r\n");
      out.write("    \r\n");
      out.write("            $(this).toggleClass('selected');\r\n");
      out.write("            console.log( $(this).hasClass('selected'));\r\n");
      out.write("            \r\n");
      out.write("            var co2Value = parseFloat($(this).data('co2')) || 0;\r\n");
      out.write("            var costValue = parseFloat($(this).data('cost')) || 0;\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            // 선택된 셀에 대한 추가 동작 수행\r\n");
      out.write("            if ($(this).hasClass('selected')) {\r\n");
      out.write("                \r\n");
      out.write("                //선택된 값 배열에 추가\r\n");
      out.write("                selectedDatae.push({ co2: co2Value, cost: costValue});\r\n");
      out.write("                //선택된 셀내용 추가\r\n");
      out.write("				selectedCellContentse.push(cellContent);                \r\n");
      out.write("            } else {\r\n");
      out.write("            	//해제된 경우:배열에서 해당값제거\r\n");
      out.write("                selectedDatae = selectedDatae.filter(function (data){\r\n");
      out.write("                	return data.co2 !== co2Value && data.cost !== costValue; 	\r\n");
      out.write("\r\n");
      out.write("                });\r\n");
      out.write("                selectedCellContentse = selectedCellContentse.filter(function (content){\r\n");
      out.write("                	return content !== cellContent\r\n");
      out.write("                });            \r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            updateTotale();\r\n");
      out.write("            updateGlobalTotal();\r\n");
      out.write("            drawElectricityBarChart(electricity, electricityEmission, electricityEmission - getTotal(selectedDatae));\r\n");
      out.write("            console.log(selectedDatae);\r\n");
      out.write("            console.log(\"1\");\r\n");
      out.write("            eReduce =electricityEmission - getTotal(selectedDatae)\r\n");
      out.write("            console.log(selectedCellContentse);\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        // 가스 탭에서 셀을 선택할 때 호출되는 함수\r\n");
      out.write("        $('#gasTable').on('click', '.clickable-cell', function () {\r\n");
      out.write("        	 var cellContent = $(this).text();\r\n");
      out.write("            $(this).toggleClass('selected');\r\n");
      out.write("            var co2Value = parseFloat($(this).data('co2')) || 0;\r\n");
      out.write("            var costValue = parseFloat($(this).data('cost')) || 0;\r\n");
      out.write("\r\n");
      out.write("            if ($(this).hasClass('selected')) {\r\n");
      out.write("                selectedDatag.push({ co2: co2Value, cost: costValue });\r\n");
      out.write("				selectedCellContentsg.push(cellContent);     \r\n");
      out.write("            } else {\r\n");
      out.write("                selectedDatag = selectedDatag.filter(function (data) {\r\n");
      out.write("                    return data.co2 !== co2Value && data.cost !== costValue;\r\n");
      out.write("                });\r\n");
      out.write("                selectedCellContentsg = selectedCellContentsg.filter(function (content){\r\n");
      out.write("                	return content !== cellContent\r\n");
      out.write("                });            \r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            updateTotalg();\r\n");
      out.write("            updateGlobalTotal();\r\n");
      out.write("            drawGasBarChart(gas, gasEmission, gasEmission - getTotal(selectedDatag));\r\n");
      out.write("            console.log(selectedDatag);\r\n");
      out.write("            console.log(\"1\");\r\n");
      out.write("            gReduce = gasEmission - getTotal(selectedDatag)\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // 테이블의 각 셀에 이벤트 리스너 추가\r\n");
      out.write("        $('#waterTable').on('click', '.clickable-cell', function () {\r\n");
      out.write("        	var cellContent = $(this).text();\r\n");
      out.write("            // 선택한 셀에 'selected' 클래스 토글\r\n");
      out.write("            $(this).toggleClass('selected');\r\n");
      out.write("            var co2Value = parseFloat($(this).data('co2')) || 0;\r\n");
      out.write("            var costValue = parseFloat($(this).data('cost')) || 0;\r\n");
      out.write("            \r\n");
      out.write("            // 선택된 셀에 대한 추가 동작 수행\r\n");
      out.write("            if ($(this).hasClass('selected')) {\r\n");
      out.write("                selectedDataw.push({ co2: co2Value, cost: costValue});\r\n");
      out.write("				selectedCellContentsw.push(cellContent)\r\n");
      out.write("                \r\n");
      out.write("            } else {\r\n");
      out.write("            	//해제된 경우:배열에서 해당값제거\r\n");
      out.write("                selectedDataw = selectedDataw.filter(function (data){\r\n");
      out.write("                	return data.co2 !== co2Value && data.cost !== costValue;\r\n");
      out.write("                });\r\n");
      out.write("                selectedCellContentsw = selectedCellContentsw.filter(function (content){\r\n");
      out.write("                	return content !== cellContent\r\n");
      out.write("                });       \r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("            updateTotalw();\r\n");
      out.write("            updateGlobalTotal();\r\n");
      out.write("            drawWaterBarChart(water, waterEmission, waterEmission - getTotal(selectedDataw));\r\n");
      out.write("            console.log(selectedDataw);\r\n");
      out.write("            console.log(\"1\");\r\n");
      out.write("            wReduce = waterEmission - getTotal(selectedDataw)\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        function updateTotale(){\r\n");
      out.write("        	 totalCo2e = 0;\r\n");
      out.write("        	 totalCoste = 0;\r\n");
      out.write("        	\r\n");
      out.write("        	//모든 선택된 값 순회\r\n");
      out.write("            selectedDatae.forEach(function (data) {\r\n");
      out.write("                totalCo2e += data.co2;\r\n");
      out.write("                totalCoste += data.cost;\r\n");
      out.write("            });\r\n");
      out.write("           //합계 값을 요약 카드에 업데이트\r\n");
      out.write("           $('#co2Electricity').text(totalCo2e.toFixed(1) + 'kg');\r\n");
      out.write("           $('#costElectricity').text(totalCoste.toFixed(0) + '원');\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function updateTotalg(){\r\n");
      out.write("        	 totalCo2g = 0;\r\n");
      out.write("        	 totalCostg = 0;\r\n");
      out.write("        	\r\n");
      out.write("        	//모든 선택된 값 순회\r\n");
      out.write("            selectedDatag.forEach(function (data) {\r\n");
      out.write("                totalCo2g += data.co2;\r\n");
      out.write("                totalCostg += data.cost;\r\n");
      out.write("            });\r\n");
      out.write("           //합계 값을 요약 카드에 업데이트\r\n");
      out.write("           $('#co2Gas').text(totalCo2g.toFixed(1) + 'kg');\r\n");
      out.write("           $('#costGas').text(totalCostg.toFixed(0) + '원');\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        function updateTotalw(){\r\n");
      out.write("        	 totalCo2w = 0;\r\n");
      out.write("        	 totalCostw = 0;\r\n");
      out.write("        	\r\n");
      out.write("        	//모든 선택된 값 순회\r\n");
      out.write("            selectedDataw.forEach(function (data) {\r\n");
      out.write("                totalCo2w += data.co2;\r\n");
      out.write("                totalCostw += data.cost;\r\n");
      out.write("            });\r\n");
      out.write("           //합계 값을 요약 카드에 업데이트\r\n");
      out.write("           $('#co2Water').text(totalCo2w.toFixed(1) + 'kg');\r\n");
      out.write("           $('#costWater').text(totalCostw.toFixed(0) + '원');\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        // 전체 합계 업데이트 함수\r\n");
      out.write("        function updateGlobalTotal() {\r\n");
      out.write("        	  globalTotalCo2 = getTotal(selectedDatae) + getTotal(selectedDatag) + getTotal(selectedDataw);\r\n");
      out.write("              globalTotalCost = getTotalCost(selectedDatae) + getTotalCost(selectedDatag) + getTotalCost(selectedDataw);\r\n");
      out.write("			 \r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("            // 전체 합계 값을 요약 카드에 업데이트\r\n");
      out.write("            $('#totalCo2').text(globalTotalCo2.toFixed(1) + 'kg');\r\n");
      out.write("            $('#totalCost').text(globalTotalCost.toFixed(0) + '원');\r\n");
      out.write("            console.log(\"totalCo2:\", globalTotalCo2, \"totalCost:\", globalTotalCost);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("     // 선택된 데이터 배열에서 co2 합을 반환하는 함수\r\n");
      out.write("        function getTotal(dataArray) {\r\n");
      out.write("            var total = 0;\r\n");
      out.write("            dataArray.forEach(function (data) {\r\n");
      out.write("                total += data.co2;\r\n");
      out.write("            });\r\n");
      out.write("            return total;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 선택된 데이터 배열에서 cost 합을 반환하는 함수\r\n");
      out.write("        function getTotalCost(dataArray) {\r\n");
      out.write("            var total = 0;\r\n");
      out.write("            dataArray.forEach(function (data) {\r\n");
      out.write("                total += data.cost;\r\n");
      out.write("            });\r\n");
      out.write("            return total;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        var myUseBarChart; // 전역 변수로 선언\r\n");
      out.write("\r\n");
      out.write("        function drawGasBarChart(totalGas, selectedGas, reducedGas) {\r\n");
      out.write("            var gasBarChartCanvas = document.getElementById('useBarChart').getContext('2d');\r\n");
      out.write("            var gasBarChartData = {\r\n");
      out.write("                labels: ['다른집', '우리집', '목표'],\r\n");
      out.write("                datasets: [{\r\n");
      out.write("                    data: [totalGas, selectedGas,  Math.max(0, reducedGas)],\r\n");
      out.write("                    backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'],\r\n");
      out.write("                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\r\n");
      out.write("                    borderWidth: 1\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // 만약 이전에 그려진 그래프가 있다면 파괴\r\n");
      out.write("            if (myUseBarChart) {\r\n");
      out.write("                myUseBarChart.destroy();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 가스 막대 그래프 생성\r\n");
      out.write("            myUseBarChart = new Chart(gasBarChartCanvas, {\r\n");
      out.write("                type: 'bar',\r\n");
      out.write("                data: gasBarChartData,\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: false,\r\n");
      out.write("                    plugins: {\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            display: false\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function drawWaterBarChart(totalWater, selectedWater, reducedWater) {\r\n");
      out.write("            var waterBarChartCanvas = document.getElementById('useBarChart').getContext('2d');\r\n");
      out.write("            var waterBarChartData = {\r\n");
      out.write("                labels: ['다른집', '우리집', '목표'],\r\n");
      out.write("                datasets: [{\r\n");
      out.write("                    data: [totalWater, selectedWater,  Math.max(0, reducedWater)],\r\n");
      out.write("                    backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'],\r\n");
      out.write("                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\r\n");
      out.write("                    borderWidth: 1\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // 만약 이전에 그려진 그래프가 있다면 파괴\r\n");
      out.write("            if (myUseBarChart) {\r\n");
      out.write("                myUseBarChart.destroy();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 수도 막대 그래프 생성\r\n");
      out.write("            myUseBarChart = new Chart(waterBarChartCanvas, {\r\n");
      out.write("                type: 'bar',\r\n");
      out.write("                data: waterBarChartData,\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: false,\r\n");
      out.write("                    plugins: {\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            display: false\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function drawElectricityBarChart(totalElectricity, selectedElectricity, reducedElectricity) {\r\n");
      out.write("            var electricityBarChartCanvas = document.getElementById('useBarChart').getContext('2d');\r\n");
      out.write("            var electricityBarChartData = {\r\n");
      out.write("                labels: ['다른집', '우리집', '목표'],\r\n");
      out.write("                datasets: [{\r\n");
      out.write("                    data: [totalElectricity, selectedElectricity,  Math.max(0, reducedElectricity)],\r\n");
      out.write("                    backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'],\r\n");
      out.write("                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\r\n");
      out.write("                    borderWidth: 1\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // 만약 이전에 그려진 그래프가 있다면 파괴\r\n");
      out.write("            if (myUseBarChart) {\r\n");
      out.write("                myUseBarChart.destroy();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 전기 막대 그래프 생성\r\n");
      out.write("            myUseBarChart = new Chart(electricityBarChartCanvas, {\r\n");
      out.write("                type: 'bar',\r\n");
      out.write("                data: electricityBarChartData,\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: false,\r\n");
      out.write("                    plugins: {\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            display: false\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("     // 전기 탭 클릭 시\r\n");
      out.write("        $('#tabs-text-1-tab').on('click', function () {\r\n");
      out.write("            // 전기 탭에 맞게 그래프 그리기\r\n");
      out.write("        	drawElectricityBarChart(electricity, electricityEmission, electricityEmission - getTotal(selectedDatae));\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 가스 탭 클릭 시\r\n");
      out.write("        $('#tabs-text-2-tab').on('click', function () {\r\n");
      out.write("            // 가스 탭에 맞게 그래프 그리기\r\n");
      out.write("        	drawGasBarChart(gas, gasEmission, gasEmission - getTotal(selectedDatag));\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 수도 탭 클릭 시\r\n");
      out.write("        $('#tabs-text-3-tab').on('click', function () {\r\n");
      out.write("            // 수도 탭에 맞게 그래프 그리기\r\n");
      out.write("        	drawWaterBarChart(water, waterEmission, waterEmission - getTotal(selectedDataw));\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        var co2UseBarChart; // 전역 변수로 선언\r\n");
      out.write("  		\r\n");
      out.write("        function drawCo2BarChart(totalAmount, totalCarbonEmission, reduceCo2 )  {\r\n");
      out.write("            var co2BarChartCanvas = document.getElementById('co2comparison').getContext('2d');\r\n");
      out.write("            var co2BarChartData = {\r\n");
      out.write("                labels: ['다른집', '우리집', '목표'],\r\n");
      out.write("                datasets: [{\r\n");
      out.write("                    data: [totalAmount, totalCarbonEmission,reduceCo2],\r\n");
      out.write("                    backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'],\r\n");
      out.write("                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\r\n");
      out.write("                    borderWidth: 1\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // 만약 이전에 그려진 그래프가 있다면 파괴\r\n");
      out.write("            if (co2UseBarChart) {\r\n");
      out.write("            	co2UseBarChart.destroy();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("            co2UseBarChart = new Chart(co2BarChartCanvas, {\r\n");
      out.write("                type: 'bar',\r\n");
      out.write("                data: co2BarChartData,\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: false,\r\n");
      out.write("                    plugins: {\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            display: false\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("			\r\n");
      out.write("       // var reduceCo2 = totalCarbonEmission -getTotal(selectedDataw) - getTotal(selectedDatae) - getTotal(selectedDatag);\r\n");
      out.write("    \r\n");
      out.write("        function updateCO2Comparison() {\r\n");
      out.write("			var comparisonText ;\r\n");
      out.write("			var userName;\r\n");
      out.write("			var userInfo\r\n");
      out.write("        	drawCo2BarChart(totalAmount, totalCarbonEmission,(totalCarbonEmission - globalTotalCo2) )\r\n");
      out.write("            var totalCO2 = totalCarbonEmission;\r\n");
      out.write("            var treesToPlant = totalTreeConversion ;\r\n");
      out.write("            var Difference = (totalAmount - totalCarbonEmission);\r\n");
      out.write("            var sectorsWithMoreCO2 = 0;\r\n");
      out.write("            console.log(totalCO2);\r\n");
      out.write("            console.log(`- 이산화탄소 배출량은 총 `+totalCO2+`kg 이며`);\r\n");
      out.write("            console.log(Difference)\r\n");
      out.write("            var count = 0;\r\n");
      out.write("            \r\n");
      out.write("            if(electricityEmission > electricity){\r\n");
      out.write("            	count +=1;\r\n");
      out.write("            }\r\n");
      out.write(" 			if(waterEmission > water){\r\n");
      out.write("            	count +=1;\r\n");
      out.write("            }\r\n");
      out.write(" 			if(gasEmission > gas){\r\n");
      out.write("            	count +=1;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            if (Difference < 0){\r\n");
      out.write("            // HTML 업데이트\r\n");
      out.write("             comparisonText = `- 이산화탄소 배출량은 총 `+totalCO2+`kg 이며, 비슷한 규모의 다른 가정보다 약 `+Math.abs(Difference)+`kg 더 많이 배출하고 있습니다.<br><br>` +\r\n");
      out.write("                `- 이만큼의 이산화탄소를 없애기 위해서는 약 `+treesToPlant+` 그루의 소나무를 심어야 합니다.<br><br>` +\r\n");
      out.write("                `- 부문별로 보면 전기,가스,수도  3개 부문 중`+count+`개 부문에서 다른 가정보다 이산화탄소 배출이 많습니다.`;\r\n");
      out.write("            }else{\r\n");
      out.write("            	comparisonText = `- 이산화탄소 배출량은 총 `+totalCO2+`kg 이며, 비슷한 규모의 다른 가정보다 약 `+Math.abs(Difference)+`kg 더 적게 배출하고 있습니다.<br><br>` +\r\n");
      out.write("                `- 이만큼의 이산화탄소를 없애기 위해서는 약 `+treesToPlant+` 그루의 소나무를 심어야 합니다.<br><br>` +\r\n");
      out.write("                `- 부문별로 보면 전기,가스,수도 3개 부문 중`+count+`개 부문에서 다른 가정보다 이산화탄소 배출이 많습니다.`;\r\n");
      out.write("            }\r\n");
      out.write("            userName = `-`+ nameInput+`님 가정의 종합평가`\r\n");
      out.write("            userInfo = `-`+nameInput+`님 가정에서 이산화탄소 배출을 줄이는 실천을 하시면 약 `+Math.round(globalTotalCo2*10)/10+`kg의 이산화탄소를 줄이고 <br>` +\r\n");
      out.write("            			`- `+globalTotalCost+`원의 비용절감 효과과 예상됩니다.`;\r\n");
      out.write("            \r\n");
      out.write("            document.getElementById('userName').innerHTML = userName;\r\n");
      out.write("            document.getElementById('co2ComparisonText').innerHTML = comparisonText;\r\n");
      out.write("			document.getElementById('userInfo').innerHTML = userInfo;\r\n");
      out.write("            console.log(\"1\");\r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write(" \r\n");
      out.write("            // 버튼 보이도록 설정\r\n");
      out.write("            $(\"#downloadButton\").show();\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        var co2EcomparisonBarChart; // 전역 변수로 선언\r\n");
      out.write("  		\r\n");
      out.write("        function co2EcomparisonChart(electricity, electricityCarbonEmission,eReduceCO2 )  {\r\n");
      out.write("            var co2EcomparisonCanvas = document.getElementById('eCO2BarChart').getContext('2d');\r\n");
      out.write("            var co2EcomparisonData = {\r\n");
      out.write("                labels: ['다른집', '우리집', '목표'],\r\n");
      out.write("                datasets: [{\r\n");
      out.write("                    data: [electricity, electricityEmission,eReduceCO2],\r\n");
      out.write("                    backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'],\r\n");
      out.write("                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\r\n");
      out.write("                    borderWidth: 1\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // 만약 이전에 그려진 그래프가 있다면 파괴\r\n");
      out.write("            if (co2EcomparisonBarChart) {\r\n");
      out.write("            	co2EcomparisonBarChart.destroy();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("            co2EcomparisonBarChart = new Chart(co2EcomparisonCanvas, {\r\n");
      out.write("                type: 'bar',\r\n");
      out.write("                data: co2EcomparisonData,\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: false,\r\n");
      out.write("                    plugins: {\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            display: false\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("   \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        var co2GcomparisonBarChart; // 전역 변수로 선언\r\n");
      out.write("  		\r\n");
      out.write("        function co2GcomparisonChart(gas, gasCarbonEmission,gReduceCO2 )  {\r\n");
      out.write("            var co2GcomparisonCanvas = document.getElementById('gCO2BarChart').getContext('2d');\r\n");
      out.write("            var co2GcomparisonData = {\r\n");
      out.write("                labels: ['다른집', '우리집', '목표'],\r\n");
      out.write("                datasets: [{\r\n");
      out.write("                    data: [gas, gasEmission,gReduceCO2],\r\n");
      out.write("                    backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'],\r\n");
      out.write("                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\r\n");
      out.write("                    borderWidth: 1\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // 만약 이전에 그려진 그래프가 있다면 파괴\r\n");
      out.write("            if (co2GcomparisonBarChart) {\r\n");
      out.write("            	co2GcomparisonBarChart.destroy();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("            co2GcomparisonBarChart = new Chart(co2GcomparisonCanvas, {\r\n");
      out.write("                type: 'bar',\r\n");
      out.write("                data: co2GcomparisonData,\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: false,\r\n");
      out.write("                    plugins: {\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            display: false\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("			\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        var co2WcomparisonBarChart; // 전역 변수로 선언\r\n");
      out.write("  		\r\n");
      out.write("        function co2WcomparisonChart(water, waterCarbonEmission,wReduceCO2 )  {\r\n");
      out.write("            var co2WcomparisonCanvas = document.getElementById('wCO2BarChart').getContext('2d');\r\n");
      out.write("            var co2WcomparisonData = {\r\n");
      out.write("                labels: ['다른집', '우리집', '목표'],\r\n");
      out.write("                datasets: [{\r\n");
      out.write("                    data: [water, waterEmission,Math.max(0, wReduceCO2)],\r\n");
      out.write("                    backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'],\r\n");
      out.write("                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\r\n");
      out.write("                    borderWidth: 1\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // 만약 이전에 그려진 그래프가 있다면 파괴\r\n");
      out.write("            if (co2WcomparisonBarChart) {\r\n");
      out.write("            	co2WcomparisonBarChart.destroy();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("            co2WcomparisonBarChart = new Chart(co2WcomparisonCanvas, {\r\n");
      out.write("                type: 'bar',\r\n");
      out.write("                data: co2WcomparisonData,\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: false,\r\n");
      out.write("                    plugins: {\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            display: false\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("       \r\n");
      out.write("        $('#tabs-icons-text-4-tab').on('click', function () {\r\n");
      out.write("            // 종합평가를 눌렀을 때 실행되어야 하는 함수 호출\r\n");
      out.write("           updateCO2Comparison();\r\n");
      out.write("            \r\n");
      out.write("           co2GcomparisonChart(gas, gasEmission, gReduce );\r\n");
      out.write("           co2WcomparisonChart(water, waterEmission, wReduce ) ;\r\n");
      out.write("           co2EcomparisonChart(electricity, electricityEmission, eReduce) ;\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("    	$('#savePdf').click(function() { // pdf저장 button id\r\n");
      out.write("    		\r\n");
      out.write("    	    html2canvas($('#pdfDiv')[0]).then(function(canvas) { //저장 영역 div id\r\n");
      out.write("    		\r\n");
      out.write("    	    // 캔버스를 이미지로 변환\r\n");
      out.write("    	    var imgData = canvas.toDataURL('image/png');\r\n");
      out.write("    		     \r\n");
      out.write("    	    var imgWidth = 190; // 이미지 가로 길이(mm) / A4 기준 210mm\r\n");
      out.write("    	    var pageHeight = imgWidth * 1.414;  // 출력 페이지 세로 길이 계산 A4 기준\r\n");
      out.write("    	    var imgHeight = canvas.height * imgWidth / canvas.width;\r\n");
      out.write("    	    var heightLeft = imgHeight;\r\n");
      out.write("    	    var margin = 10; // 출력 페이지 여백설정\r\n");
      out.write("    	    var doc = new jsPDF('p', 'mm');\r\n");
      out.write("    	    var position = 0;\r\n");
      out.write("    	       \r\n");
      out.write("    	    // 첫 페이지 출력\r\n");
      out.write("    	    doc.addImage(imgData, 'PNG', margin, position, imgWidth, imgHeight);\r\n");
      out.write("    	    heightLeft -= pageHeight;\r\n");
      out.write("    	         \r\n");
      out.write("    	    // 한 페이지 이상일 경우 루프 돌면서 출력\r\n");
      out.write("    	    while (heightLeft >= 20) {\r\n");
      out.write("    	        position = heightLeft - imgHeight;\r\n");
      out.write("    	        doc.addPage();\r\n");
      out.write("    	        doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\r\n");
      out.write("    	        heightLeft -= pageHeight;\r\n");
      out.write("    	    }\r\n");
      out.write("    	 \r\n");
      out.write("    	    // 파일 저장\r\n");
      out.write("    	    doc.save('file-name.pdf');\r\n");
      out.write("\r\n");
      out.write("    		  \r\n");
      out.write("    	});\r\n");
      out.write("\r\n");
      out.write("    	});\r\n");
      out.write("    	\r\n");
      out.write("    	document.getElementById('sendReport').addEventListener('click', function() {\r\n");
      out.write("    		saveResultToLocalStorage();\r\n");
      out.write("    	    // 다른 페이지의 URL을 여기에 입력하세요\r\n");
      out.write("    	    var newPageURL = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/report\";\r\n");
      out.write("\r\n");
      out.write("    	    // 현재 창에서 새로운 페이지로 이동\r\n");
      out.write("    	    window.location.href = newPageURL;\r\n");
      out.write("    	});\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("	</script>\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		<div class=\"col-md-4\">\r\n");
      out.write("			<div class=\"mt-5 mb-5\">\r\n");
      out.write("				<span class=\"font-weight-bold\">Tab With Icons</span>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- End of Title -->\r\n");
      out.write("	<div class=\"container\" id=\"pdfDiv\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-10 col-lg-8\">\r\n");
      out.write("				<!-- Tab Nav -->\r\n");
      out.write("				<div class=\"nav-wrapper position-relative mb-4\">\r\n");
      out.write("				    <ul class=\"nav nav-pills nav-fill flex-column flex-md-row\" id=\"tabs-icons-text\" role=\"tablist\">\r\n");
      out.write("				        <!-- Tab Item: 나의 정보 -->\r\n");
      out.write("				        <li class=\"nav-item\">\r\n");
      out.write("				            <a class=\"nav-link mb-sm-3 mb-md-0 active\" id=\"tabs-icons-text-1-tab\" data-toggle=\"tab\"\r\n");
      out.write("				               href=\"#tabs-icons-text-1\" role=\"tab\" aria-controls=\"tabs-icons-text-1\" aria-selected=\"true\">\r\n");
      out.write("				                <i class=\"fas fa-tint\"></i>나의 정보\r\n");
      out.write("				            </a>\r\n");
      out.write("				        </li>\r\n");
      out.write("				\r\n");
      out.write("				        <!-- Tab Item: 사용량분석 -->\r\n");
      out.write("				        <li class=\"nav-item\">\r\n");
      out.write("				            <a class=\"nav-link mb-sm-3 mb-md-0\" id=\"tabs-icons-text-2-tab\" data-toggle=\"tab\"\r\n");
      out.write("				               href=\"#tabs-icons-text-2\" role=\"tab\" aria-controls=\"tabs-icons-text-2\" aria-selected=\"false\">\r\n");
      out.write("				                <i class=\"fas fa-bug\"></i>사용량분석\r\n");
      out.write("				            </a>\r\n");
      out.write("				        </li>\r\n");
      out.write("				\r\n");
      out.write("				        <!-- Tab Item: 실천목표 -->\r\n");
      out.write("				        <li class=\"nav-item\">\r\n");
      out.write("				            <a class=\"nav-link mb-sm-3 mb-md-0\" id=\"tabs-icons-text-3-tab\" data-toggle=\"tab\"\r\n");
      out.write("				               href=\"#tabs-icons-text-3\" role=\"tab\" aria-controls=\"tabs-icons-text-3\" aria-selected=\"false\">\r\n");
      out.write("				                <i class=\"fas fa-user-astronaut\"></i>실천목표\r\n");
      out.write("				            </a>\r\n");
      out.write("				        </li>\r\n");
      out.write("				\r\n");
      out.write("				        <!-- Tab Item: 종합평가 -->\r\n");
      out.write("				        <li class=\"nav-item\">\r\n");
      out.write("				            <a class=\"nav-link mb-sm-3 mb-md-0\" id=\"tabs-icons-text-4-tab\" data-toggle=\"tab\"\r\n");
      out.write("				               href=\"#tabs-icons-text-4\" role=\"tab\" aria-controls=\"tabs-icons-text-4\" aria-selected=\"false\">\r\n");
      out.write("				                <i class=\"fas fa-user-astronaut\"></i>종합평가\r\n");
      out.write("				            </a>\r\n");
      out.write("				        </li>\r\n");
      out.write("				    </ul>\r\n");
      out.write("				</div>				\r\n");
      out.write("				<!-- End of Tab Nav -->\r\n");
      out.write("				<!-- Tab Content -->\r\n");
      out.write("			\r\n");
      out.write("				<div class=\"card1 shadow-inset bg-primary border-light p-4 rounded\">\r\n");
      out.write("					<div class=\"card-body p-0\">\r\n");
      out.write("						<div class=\"tab-content\" id=\"tabcontent2\">\r\n");
      out.write("							<div class=\"tab-pane fade show active\" id=\"tabs-icons-text-1\"\r\n");
      out.write("								role=\"tabpanel\" aria-labelledby=\"tabs-icons-text-1-tab\">\r\n");
      out.write("\r\n");
      out.write("								<p class=\"inline-form\">\r\n");
      out.write("									이름(별명)<input type=\"text\" class=\"form-control1\"\r\n");
      out.write("										id=\"exampleInputEmail67\" aria-describedby=\"emailHelp\"\r\n");
      out.write("										width=\"300px\" required>\r\n");
      out.write("								</p>\r\n");
      out.write("								<hr>\r\n");
      out.write("								<p class=\"inline-form\">\r\n");
      out.write("									주거형태\r\n");
      out.write("									<fieldset>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"housingType\" id=\"exampleRadios1\" value=\"아파트\"\r\n");
      out.write("											checked=\"checked\">\r\n");
      out.write("                                        <label class=\"form-check-label\"\r\n");
      out.write("											for=\"exampleRadios1\">아파트</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"housingType\" id=\"exampleRadios2\" value=\"단독주택\"> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios2\">단독주택</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"housingType\" id=\"exampleRadios3\" value=\"연립주택\"> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios3\">연립/다세대/다가구</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"housingType\" id=\"exampleRadios4\" value=\"기타\"> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios4\">기타</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <!-- End of Radio -->\r\n");
      out.write("                                </fieldset>\r\n");
      out.write("                                </p>\r\n");
      out.write("                                <hr>\r\n");
      out.write("                                <p class=\"inline-form\">거주면적\r\n");
      out.write("                                \r\n");
      out.write("								<fieldset>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"residenceArea\" id=\"exampleRadios1\" value=\"10평이하\"\r\n");
      out.write("											checked=\"checked\">\r\n");
      out.write("                                        <label class=\"form-check-label\"\r\n");
      out.write("											for=\"exampleRadios1\">~33m2(10평이하)</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"residenceArea\" id=\"exampleRadios2\" value=\"20평이하\"> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios2\">33.1~66m2(10.1~20평)</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"residenceArea\" id=\"exampleRadios3\" value=\"30평이하\"> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios3\">66.1~99m2(20.1~30평)</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"residenceArea\" id=\"exampleRadios4\" value=\"40평이하\"> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios4\">99.1~132m2(30.1~40평)</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"residenceArea\" id=\"exampleRadios5\" value=\"40평초과\"> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios5\">132.1m2(40평 초과)</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <!-- End of Radio -->\r\n");
      out.write("                                </fieldset>\r\n");
      out.write("                                </p>\r\n");
      out.write("                                <hr>\r\n");
      out.write("                                <p class=\"inline-form\">거주인원\r\n");
      out.write("                                \r\n");
      out.write("								<fieldset>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"people\" id=\"exampleRadios1\" value= 1\r\n");
      out.write("											checked=\"checked\">\r\n");
      out.write("                                        <label class=\"form-check-label\"\r\n");
      out.write("											for=\"exampleRadios1\">1명</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"people\" id=\"exampleRadios2\" value= 2> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios2\">2명</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"people\" id=\"exampleRadios3\" value= 3> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios3\">3명</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"people\" id=\"exampleRadios4\" value= 4> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios4\">4명</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"people\" id=\"exampleRadios5\" value= 5> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios5\">5명</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-check1\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("											name=\"people\" id=\"exampleRadios6\" value= 6> <label\r\n");
      out.write("											class=\"form-check-label\" for=\"exampleRadios6\">6명 이상</label>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </fieldset>\r\n");
      out.write("                                </p>\r\n");
      out.write("                                <hr>\r\n");
      out.write("		<!-- 개인정보 수집 및 이용 동의 섹션 -->\r\n");
      out.write("		<div class=\"inline-form\">\r\n");
      out.write("		    <div class=\"col-12 col-md-10 col-lg-6\">\r\n");
      out.write("		        <div class=\"alert shadow-inset\" style=\"width: 200%;\">\r\n");
      out.write("		            <!-- 개인정보 수집 안내 및 링크 -->\r\n");
      out.write("		            <div class=\"d-flex\">\r\n");
      out.write("		                <div class=\"alert-inner--text\">\r\n");
      out.write("		                    <a target=\"_blank\" href=\"https://themesberg.com/docs/neumorphism-ui/components/bootstrap-carousels/\">\r\n");
      out.write("		                        <h4>개인정보 수집·이용 동의</h4><br>\r\n");
      out.write("		                        TEAM CARINA는 탄소발자국 계산기 결과값 계산 및 사용현황 분석을 위해 다음과 같이 개인정보를 수집·이용합니다.<br><br>\r\n");
      out.write("		                        - 수집하는 개인정보 항목: 이름, 주거형태, 주거면적, 거주인원<br>\r\n");
      out.write("		                        - 개인정보의 수집 및 이용목적: 탄소발자국 계산기 결과값 계산 및 사용현황 분석<br>\r\n");
      out.write("		                        - 개인정보의 보유 및 이용기간: 5년<br><br>\r\n");
      out.write("		                        ※ 사용자는 개인정보 수집 및 이용을 거부할 권리가 있습니다. 단, 탄소발자국 계산기 계산결과 제공이 불가합니다.<br>\r\n");
      out.write("		                        ※ 본 개인정보 수집·이용 목적은 사용자 식별이 아니므로 이름 대신 별명이나 식별 불가한 정보를 입력하셔도 무관합니다.\r\n");
      out.write("		                    </a> \r\n");
      out.write("		                </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		        </div>\r\n");
      out.write("		    </div>\r\n");
      out.write("		</div>\r\n");
      out.write("                                <div class=\"d-flex\">\r\n");
      out.write("                                    <div class=\"form-check square-check\">\r\n");
      out.write("										<input class=\"form-check-input\" type=\"checkbox\" value=\"\"\r\n");
      out.write("											id=\"defaultCheck222\"> <label class=\"form-check-label\"\r\n");
      out.write("											for=\"defaultCheck222\"> 개인정보 수집 및 이용에 동의함</label>\r\n");
      out.write("									</div>\r\n");
      out.write("                                    <button\r\n");
      out.write("										class=\"btn btn-primary text-secondary ml-10\" type=\"button\" id=\"saveButton\"\r\n");
      out.write("										style=\"width:200px;\">저장</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                 \r\n");
      out.write("\r\n");
      out.write("                            <div class=\"tab-pane fade\"\r\n");
      out.write("								id=\"tabs-icons-text-2\" role=\"tabpanel\"\r\n");
      out.write("								aria-labelledby=\"tabs-icons-text-2-tab\">\r\n");
      out.write("									<div id=\"resultContainer\">123</div>\r\n");
      out.write("                                <div class=\"col-12 col-lg-12\">\r\n");
      out.write("                                    <div\r\n");
      out.write("										class=\"card bg-primary shadow-inset border-light w-100\">\r\n");
      out.write("                                        <div class=\"card-body p-5 \">\r\n");
      out.write(" 											\r\n");
      out.write("         									\r\n");
      out.write("\r\n");
      out.write("                                            <h3\r\n");
      out.write("												class=\"h4 card-title mb-3\">\r\n");
      out.write("												<strong>TEST RESULT</strong>\r\n");
      out.write("												\r\n");
      out.write("											</h3>\r\n");
      out.write("\r\n");
      out.write("												<canvas id=\"myDoughnutChart\"></canvas>\r\n");
      out.write("		\r\n");
      out.write("											<span class=\"card-text small\"> ㅇㅇ님의 이산화탄소 발생량 통계입니다.\r\n");
      out.write("                                            </span>\r\n");
      out.write("                                            <p id=\"carbonEmissionInfo\" class=\"card-text mt-4\">ㅇㅇ 님 가정은 이산화탄소 배출량은 총 12kg 이며,\r\n");
      out.write("                                                비슷한 다른 가정 평균 343.8kg 보다 약 0% 더 많이 배출하고 있습니다.\r\n");
      out.write("                                                12kg의 이산화탄소 를 상쇄시키기 위해서는 2.9 그루의 소나무를 심어야 합니다.\r\n");
      out.write("                                                왼쪽의 그래프를 보고 어느 부분에서 이산화탄소를 많이 발생하고 있는지 비교해 보세요.</p>\r\n");
      out.write("\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"container no-gutters\"\r\n");
      out.write("									style=\"margin-top: 20px;\">\r\n");
      out.write("                                    <div class=\"row\">\r\n");
      out.write("                                        <div class=\"col-12 col-lg-3\">\r\n");
      out.write("                                            <!-- 첫 번째 작은 컨테이너 -->\r\n");
      out.write("                                            <div\r\n");
      out.write("												class=\"card bg-primary shadow-soft border-light w-100\"\r\n");
      out.write("												style=\"height: 200px;\">\r\n");
      out.write("                                                <!-- 내용 -->\r\n");
      out.write("                                                <p>Co2 발생량</p>\r\n");
      out.write("                                                <canvas id=\"totalChart\" style=\"width: 80%; height: 80%;\"></canvas>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-12 col-lg-3\">\r\n");
      out.write("                                            <!-- 두 번째 작은 컨테이너 -->\r\n");
      out.write("                                            <div\r\n");
      out.write("												class=\"card bg-primary shadow-soft border-light w-100\"\r\n");
      out.write("												style=\"height: 200px;\">\r\n");
      out.write("                                                <!-- 내용 -->\r\n");
      out.write("                                                <p>전기</p>\r\n");
      out.write("                                                <canvas id=\"electricityChart\" style=\"width: 80%; height: 80%;\"></canvas>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-12 col-lg-3\">\r\n");
      out.write("                                            <!-- 세 번째 작은 컨테이너 -->\r\n");
      out.write("                                            <div\r\n");
      out.write("												class=\"card bg-primary shadow-soft border-light w-100\"\r\n");
      out.write("												style=\"height: 200px;\">\r\n");
      out.write("                                                <!-- 내용 -->\r\n");
      out.write("                                                <p>가스</p>\r\n");
      out.write("                                                <canvas id=\"gasChart\" style=\"width: 80%; height: 80%;\"></canvas>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-12 col-lg-3\">\r\n");
      out.write("                                            <!-- 네 번째 작은 컨테이너 -->\r\n");
      out.write("                                            <div\r\n");
      out.write("												class=\"card bg-primary shadow-soft border-light w-100\"\r\n");
      out.write("												style=\"height: 200px;\">\r\n");
      out.write("                                                <!-- 내용 -->\r\n");
      out.write("                                                <p>수도</p>\r\n");
      out.write("                                                <canvas id=\"waterChart\" style=\"width: 80%; height: 80%;\"></canvas>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"tab-pane fade\"\r\n");
      out.write("								id=\"tabs-icons-text-3\" role=\"tabpanel\"\r\n");
      out.write("								aria-labelledby=\"tabs-icons-text-3-tab\">\r\n");
      out.write("                                <div class=\"row\">\r\n");
      out.write("                                    <!-- 왼쪽 탭 메뉴 -->\r\n");
      out.write("                                    <div class=\"col-md-6\">\r\n");
      out.write("                                        <div class=\"col-md-10 col-lg-8\">\r\n");
      out.write("											<!-- Tab Nav -->\r\n");
      out.write("                                            <div\r\n");
      out.write("												class=\"nav-wrapper position-relative mb-4\">\r\n");
      out.write("                                                <ul\r\n");
      out.write("													class=\"nav nav-pills-u flex-column flex-sm-row \"\r\n");
      out.write("													id=\"tabs-text\" role=\"tablist\">\r\n");
      out.write("                                                    <li\r\n");
      out.write("														class=\"nav-item mr-sm-3 mr-md-0\"><a\r\n");
      out.write("														class=\"nav-link mb-sm-3 mb-md-0 active\"\r\n");
      out.write("														id=\"tabs-text-1-tab\" data-toggle=\"tab\" href=\"#tabs-text-1\"\r\n");
      out.write("														role=\"tab\" aria-controls=\"tabs-text-1\"\r\n");
      out.write("														aria-selected=\"true\">전기</a></li>\r\n");
      out.write("                                                    <li\r\n");
      out.write("														class=\"nav-item mr-sm-3 mr-md-0\"><a\r\n");
      out.write("														class=\"nav-link mb-sm-3 mb-md-0\" id=\"tabs-text-2-tab\"\r\n");
      out.write("														data-toggle=\"tab\" href=\"#tabs-text-2\" role=\"tab\"\r\n");
      out.write("														aria-controls=\"tabs-text-2\" aria-selected=\"false\">가스</a>\r\n");
      out.write("                                                    </li>\r\n");
      out.write("                                                    <li\r\n");
      out.write("														class=\"nav-item mr-sm-3 mr-md-0\"><a\r\n");
      out.write("														class=\"nav-link mb-sm-3 mb-md-0\" id=\"tabs-text-3-tab\"\r\n");
      out.write("														data-toggle=\"tab\" href=\"#tabs-text-3\" role=\"tab\"\r\n");
      out.write("														aria-controls=\"tabs-text-3\" aria-selected=\"false\">수도</a>\r\n");
      out.write("                                                    </li>\r\n");
      out.write("                                                </ul>\r\n");
      out.write("                                            </div>\r\n");
      out.write("											<!-- End of Tab Nav -->\r\n");
      out.write("											<!-- Tab Content -->\r\n");
      out.write("                                            <div\r\n");
      out.write("												class=\"card shadow-inset bg-primary border-light p-4 rounded\">\r\n");
      out.write("                                                <div\r\n");
      out.write("													class=\"card-body p-4 \"\r\n");
      out.write("													style=\"overflow-x: auto; overflow-y: auto;\">\r\n");
      out.write("                                                    <div\r\n");
      out.write("														class=\"tab-content\" id=\"tabcontent1\">\r\n");
      out.write("                                                        <div\r\n");
      out.write("															class=\"tab-pane fade show active\" id=\"tabs-text-1\"\r\n");
      out.write("															role=\"tabpanel\" aria-labelledby=\"tabs-text-1-tab\"\r\n");
      out.write("															style=\" text-align: center;\">\r\n");
      out.write("                                                            <h3>\r\n");
      out.write("																<strong>전기</strong>\r\n");
      out.write("															</h3>\r\n");
      out.write("                                                            <table\r\n");
      out.write("																class=\"table table-hover shadow-inset rounded\" id=\"electricityTable\">\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"3.2\" data-cost=\"1293\"  class=\"clickable-cell\">하루 1시간은 에어컨 대신 선풍기로!</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"0.6\" data-cost=\"226\" class=\"clickable-cell\">세탁은 모아서 해도 잘 된답니다.</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"5.9\" data-cost=\"2368\" class=\"clickable-cell\">전기밥솥 보온기능은 전기 먹는 하마</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"1.6\" data-cost=\"653\" class=\"clickable-cell\">컴퓨터 절전프로그램(그린터치) 사용</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"1.8\" data-cost=\"725\" class=\"clickable-cell\">TV 시청 줄이고 가족과 대화 늘리고!</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                            </table>\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                        <div\r\n");
      out.write("															class=\"tab-pane fade\" id=\"tabs-text-2\" role=\"tabpanel\"\r\n");
      out.write("															aria-labelledby=\"tabs-text-2-tab\"\r\n");
      out.write("															style=\" text-align: center;\">\r\n");
      out.write("                                                            <h3>\r\n");
      out.write("																<strong>가스</strong>\r\n");
      out.write("															</h3>\r\n");
      out.write("                                                            <table\r\n");
      out.write("																class=\"table table-hover shadow-inset rounded\" id=\"gasTable\">\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"14.6\" data-cost=\"5427\" class=\"clickable-cell\" >겨울철 난방온도는 20℃가 적당해요.</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"28.3\" data-cost=\"10518\" class=\"clickable-cell\">보일러 사용시간 1시간만 줄여요.</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                            </table>\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                        <div\r\n");
      out.write("															class=\"tab-pane fade\" id=\"tabs-text-3\" role=\"tabpanel\"\r\n");
      out.write("															aria-labelledby=\"tabs-text-3-tab\"\r\n");
      out.write("															style=\" text-align: center;\">\r\n");
      out.write("                                                            <h3>\r\n");
      out.write("																<strong>수도</strong>\r\n");
      out.write("															</h3>\r\n");
      out.write("                                                            <table\r\n");
      out.write("																class=\"table table-hover shadow-inset rounded\" id=\"waterTable\">\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"3.9\" data-cost=\"7760\" class=\"clickable-cell\">절수기로 물낭비를 쉽게 막아요.</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"0.4\" data-cost=\"804\" class=\"clickable-cell\">물을 받아서 설거지 해요.</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                                <tr>\r\n");
      out.write("                                                                    <td data-co2=\"0.6\" data-cost=\"1090\" class=\"clickable-cell\">짧게 샤워하는 그대가 진정한 멋쟁이!</td>\r\n");
      out.write("                                                                </tr>\r\n");
      out.write("                                                            </table>\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                    </div>\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                            </div>\r\n");
      out.write("											<!-- End of Tab Content -->\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("\r\n");
      out.write("                                    <!-- 오른쪽 영역 -->\r\n");
      out.write("                                    <div class=\"col-md-6\">\r\n");
      out.write("                                        <div class=\"row\">\r\n");
      out.write("                                            <!-- 위쪽 세로로 나눈 영역 -->\r\n");
      out.write("                                            <div class=\"col-md-12 mb-5\">\r\n");
      out.write("                                                <div\r\n");
      out.write("													class=\"card bg-primary shadow-soft border-light\"\r\n");
      out.write("													style=\"width: 450px; height: 300px;\">\r\n");
      out.write("                                                    <table\r\n");
      out.write("														class=\"table table-hover shadow-inset rounded\">\r\n");
      out.write("                                                        <th>\r\n");
      out.write("                                                        \r\n");
      out.write("														<td>월간 co2저감 목표 및 비용 효과</td>\r\n");
      out.write("                                                        </th>\r\n");
      out.write("                                                        <tr>\r\n");
      out.write("                                                            <td>전기</td>\r\n");
      out.write("                                                            <td id=\"co2Electricity\">0kg</td>\r\n");
      out.write("                                                            <td id=costElectricity>0원</td>\r\n");
      out.write("                                                        </tr>\r\n");
      out.write("                                                        <tr>\r\n");
      out.write("                                                            <td>가스</td>\r\n");
      out.write("                                                            <td id=\"co2Gas\">0kg</td>\r\n");
      out.write("                                                            <td id=\"costGas\">0원</td>\r\n");
      out.write("                                                        </tr>\r\n");
      out.write("                                                        <tr>\r\n");
      out.write("                                                            <td>수도</td>\r\n");
      out.write("                                                            <td id=\"co2Water\">0kg</td>\r\n");
      out.write("                                                            <td id=\"costWater\">0원</td>\r\n");
      out.write("                                                        </tr>\r\n");
      out.write("                                                        <tr>\r\n");
      out.write("                                                            <td>합계</td>\r\n");
      out.write("                                                            <td id=\"totalCo2\">0kg</td>\r\n");
      out.write("                                                            <td id=\"totalCost\">0원</td>\r\n");
      out.write("                                                        </tr>\r\n");
      out.write("                                                    </table>\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                            </div>\r\n");
      out.write("\r\n");
      out.write("                                            <!-- 아래쪽 세로로 나눈 영역 -->\r\n");
      out.write("                                            <div class=\"col-md-12\">\r\n");
      out.write("                                                <div\r\n");
      out.write("													class=\"card bg-primary shadow-soft border-light\"\r\n");
      out.write("													style=\"width: 450px; height: 200px;\">\r\n");
      out.write("   														<canvas id=\"useBarChart\"></canvas>\r\n");
      out.write("\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"tab-pane fade\"\r\n");
      out.write("								id=\"tabs-icons-text-4\" role=\"tabpanel\"\r\n");
      out.write("								aria-labelledby=\"tabs-icons-text-4-tab \">\r\n");
      out.write("                                <div\r\n");
      out.write("									class=\"card flex-grow-1 bg-primary shadow-soft border-light text-center mb-4\"\r\n");
      out.write("									style=\"width: 1050px;\">\r\n");
      out.write("                                    <!-- 첫 번째 컨테이너 -->\r\n");
      out.write("                                    <strong id=\"userName\">ㅇㅇ님 가정의 종합평가\r\n");
      out.write("                                    </strong>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"container\">\r\n");
      out.write("                                    <div class=\"row\">\r\n");
      out.write("                                        <!-- 왼쪽 컨테이너 (가로 4) -->\r\n");
      out.write("                                        <div class=\"col-5\">\r\n");
      out.write("                                            <div\r\n");
      out.write("												class=\"card bg-primary shadow-soft border-light text-center\"\r\n");
      out.write("												style=\"overflow-x: auto;\">\r\n");
      out.write("                                                <!-- 내용 -->\r\n");
      out.write("                                                <strong>이산화탄소 배출현황 및 비교</strong>\r\n");
      out.write("                                               <canvas id=\"co2comparison\" style=\"width: 90%; height: 90%;\"></canvas> <br>\r\n");
      out.write("                                                <p id=\"co2ComparisonText\"> <br><br>\r\n");
      out.write("                                                    <br><br>\r\n");
      out.write("                                                    </p>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("\r\n");
      out.write("                                        <!-- 오른쪽 컨테이너 (가로 6) -->\r\n");
      out.write("                                        <div class=\"col-7\">\r\n");
      out.write("                                            <div\r\n");
      out.write("												class=\"card bg-primary shadow-soft border-light text-center\">\r\n");
      out.write("                                                <!-- 내용 -->\r\n");
      out.write("                                                <strong>부분별 배출현황 및 비교</strong>\r\n");
      out.write("                                                <div\r\n");
      out.write("													class=\"container mt-4\">\r\n");
      out.write("                                                    <div class=\"row\">\r\n");
      out.write("                                                        <div\r\n");
      out.write("															class=\"col-6\">\r\n");
      out.write("                                                            <div\r\n");
      out.write("																class=\"card bg-primary shadow-soft border-light\">\r\n");
      out.write("                                                                <!-- 내용 -->\r\n");
      out.write("                                                                <p>전기</p>\r\n");
      out.write("   																<canvas id=\"eCO2BarChart\" style=\"width: 90%; height: 90%;\"></canvas> <br>\r\n");
      out.write("                                                            </div>\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                        <!-- 두 번째 컨테이너 (가로 6) -->\r\n");
      out.write("                                                        <div\r\n");
      out.write("															class=\"col-6\">\r\n");
      out.write("                                                            <div\r\n");
      out.write("																class=\"card bg-primary shadow-soft border-light\">\r\n");
      out.write("                                                                <!-- 내용 -->\r\n");
      out.write("                                                                 <p>수도</p>\r\n");
      out.write("                                                                <canvas id=\"wCO2BarChart\" style=\"width: 90%; height: 90%;\"></canvas> <br> <br>\r\n");
      out.write("                                                            </div>\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                        <!-- 세 번째 컨테이너 (가로 6) -->\r\n");
      out.write("                                                        <div\r\n");
      out.write("															class=\"col-6 mt-4 mb-3\">\r\n");
      out.write("                                                            <div\r\n");
      out.write("																class=\"card bg-primary shadow-soft border-light\">\r\n");
      out.write("                                                                <!-- 내용 -->\r\n");
      out.write("                                                                 <p>가스</p>\r\n");
      out.write("                                                                <canvas id=\"gCO2BarChart\" style=\"width: 90%; height: 90%;\"></canvas> <br> <br>\r\n");
      out.write("                                                            </div>\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                        <!-- 네 번째 컨테이너 (가로 6) -->\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                    </div>\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                                <div class=\"col-6\">\r\n");
      out.write("                                                    <div\r\n");
      out.write("														class=\"card bg-primary shadow-soft border-light\"\r\n");
      out.write("											\r\n");
      out.write("														style=\"height: 250px;width: 210%; overflow-x: auto;\" >\r\n");
      out.write("                                                       <p id=\"userInfo\"></p>\r\n");
      out.write("                                                        <div\r\n");
      out.write("															class=\"row justify-content-center\" id=\"downloadButton\">\r\n");
      out.write("                                                            <div\r\n");
      out.write("																class=\"col-12 col-md-10 col-lg-10\">\r\n");
      out.write("                                                                <div\r\n");
      out.write("																	class=\"alert shadow-inset\">\r\n");
      out.write("                                                                    <div\r\n");
      out.write("																		class=\"d-flex\">\r\n");
      out.write("                                                                            \r\n");
      out.write("																		<button class=\"btn btn-primary text-success ml-4\"\r\n");
      out.write("																		id=\"sendReport\"\r\n");
      out.write("																		type=\"button\"\r\n");
      out.write("																		\r\n");
      out.write("																			>보고서 이동</button>\r\n");
      out.write("                                                                        </div>\r\n");
      out.write("                                                                    </div>\r\n");
      out.write("                                                                </div>\r\n");
      out.write("                                                            </div>\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                    </div>\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                            </div>\r\n");
      out.write("\r\n");
      out.write("                                        </div>\r\n");
      out.write("\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("			<!-- End of Tab Content -->\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!-- Footer-->\r\n");
      out.write("<footer\r\n");
      out.write("	class=\"d-flex pb-5 pt-6 pt-md-7 border-top border-light bg-primary\">\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-lg-4\">\r\n");
      out.write("				<p class=\"text-gray font-small m-0\">\r\n");
      out.write("				<h5>TEAM CARINA</h5>\r\n");
      out.write("				was created to raise awareness and contribute socially to the carbon\r\n");
      out.write("				neutrality issues facing humanity.\r\n");
      out.write("				</p>\r\n");
      out.write("				<ul class=\"d-flex list-unstyled mb-5 mb-lg-0\">\r\n");
      out.write("					<li class=\"mr-2\"><a href=\"https://me.go.kr/home/web/main.do\"><img\r\n");
      out.write("							src=\"resources/assets/img/brand/환경부.png\"></a></li>\r\n");
      out.write("					<li class=\"mr-2\"><a\r\n");
      out.write("						href=\"https://www.kcen.kr/USR_main2016.jsp??=MAIN/index\"><img\r\n");
      out.write("							src=\"resources/assets/img/brand/한국기후환경 네트워크.png\"></a></li>\r\n");
      out.write("					<li class=\"mr-2\"><a\r\n");
      out.write("						href=\"https://www.c-action.kr/web/index.html\"><img\r\n");
      out.write("							src=\"resources/assets/img/brand/기후행동 1.5.png\"></a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-6 col-lg-2 mb-5 mb-lg-0\">\r\n");
      out.write("				<h5>CARINA</h5>\r\n");
      out.write("				<ul class=\"footer-links list-unstyled mt-2\">\r\n");
      out.write("					<li class=\"mb-1\"><a class=\"p-2\" target=\"_blank\"\r\n");
      out.write("						href=\"");
      if (_jspx_meth_c_005furl_005f18(_jspx_page_context))
        return;
      out.write("\">지역별 탄소 배출량</a></li>\r\n");
      out.write("					<li class=\"mb-1\"><a class=\"p-2\" target=\"_blank\"\r\n");
      out.write("						href=\"");
      if (_jspx_meth_c_005furl_005f19(_jspx_page_context))
        return;
      out.write("\">환경 MBTI</a></li>\r\n");
      out.write("					<li class=\"mb-1\"><a class=\"p-2\" target=\"_blank\"\r\n");
      out.write("						href=\"");
      if (_jspx_meth_c_005furl_005f20(_jspx_page_context))
        return;
      out.write("\">전력 예측 모델</a></li>\r\n");
      out.write("					<li><a class=\"p-2\" target=\"_blank\"\r\n");
      out.write("						href=\"");
      if (_jspx_meth_c_005furl_005f21(_jspx_page_context))
        return;
      out.write("\">탄소 시뮬레이터</a></li>\r\n");
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-6 col-lg-2 mb-5 mb-lg-0\">\r\n");
      out.write("				<h5>게시판</h5>\r\n");
      out.write("				<ul class=\"footer-links list-unstyled mt-2\">\r\n");
      out.write("					<li><a class=\"p-2\" target=\"_blank\"\r\n");
      out.write("						href=\"");
      if (_jspx_meth_c_005furl_005f22(_jspx_page_context))
        return;
      out.write("\">자유 게시판</a></li>\r\n");
      out.write("					<li><a class=\"p-2\" target=\"_blank\"\r\n");
      out.write("						href=\"");
      if (_jspx_meth_c_005furl_005f23(_jspx_page_context))
        return;
      out.write("\">실천 일지</a></li>\r\n");
      out.write("					<li><a class=\"p-2\" target=\"_blank\"\r\n");
      out.write("						href=\"");
      if (_jspx_meth_c_005furl_005f24(_jspx_page_context))
        return;
      out.write("\">환경 뉴스</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-12 col-lg-4 mb-5 mb-lg-0\">\r\n");
      out.write("				<h5>연락처</h5>\r\n");
      out.write("				<p class=\"text-gray font-small mt-2\">주소: 대전시 서구 계룡로 491번길 86(둔산동\r\n");
      out.write("					1221번지) 전화번호: 042-471-9222 팩스: 042-471-9223</p>\r\n");
      out.write("\r\n");
      out.write("				<p class=\"text-gray font-small m-0\">\r\n");
      out.write("					We’ll never share your details. See our <a class=\"text-black\"\r\n");
      out.write("						href=\"#\">Privacy Policy</a>\r\n");
      out.write("				</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<hr class=\"my-5\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col\">\r\n");
      out.write("				<a href=\"https://themesberg.com\" target=\"_blank\"\r\n");
      out.write("					class=\"d-flex justify-content-center\"><img\r\n");
      out.write("					src=\"resources/assets/img/brand/carina_logo.png\" height=\"100\"\r\n");
      out.write("					class=\"mb-3\" alt=\"CARINA Logo\"></a>\r\n");
      out.write("				<div\r\n");
      out.write("					class=\"d-flex text-center justify-content-center align-items-center\"\r\n");
      out.write("					role=\"contentinfo\">\r\n");
      out.write("					<p class=\"font-weight-normal font-small mb-0\">\r\n");
      out.write("						Copyright © CARINA <span class=\"current-year\">2023</span>. All\r\n");
      out.write("						rights reserved.\r\n");
      out.write("					</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</footer>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/jquery/dist/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/popper.js/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/bootstrap/dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/headroom.js/dist/headroom.min.js\"></script>\r\n");
      out.write("<!-- Vendor JS -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/onscreen/dist/on-screen.umd.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/nouislider/distribute/nouislider.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/waypoints/lib/jquery.waypoints.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/jarallax/dist/jarallax.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/jquery.counterup/jquery.counterup.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/jquery-countdown/dist/jquery.countdown.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/smooth-scroll/dist/smooth-scroll.polyfills.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vendor/prismjs/prism.js\"></script>\r\n");
      out.write("<script async defer=\"defer\" src=\"https://buttons.github.io/buttons.js\"></script>\r\n");
      out.write("<!-- Neumorphism JS -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/neumorphism.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/inc/top.jsp(77,9) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/inc/top.jsp(92,11) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/carbon");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent(null);
      // /WEB-INF/inc/top.jsp(95,11) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("/mbti");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f3_reused = false;
    try {
      _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f3.setParent(null);
      // /WEB-INF/inc/top.jsp(98,11) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f3.setValue("/simulater ");
      int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
      if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      _jspx_th_c_005furl_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f3, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f4_reused = false;
    try {
      _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f4.setParent(null);
      // /WEB-INF/inc/top.jsp(106,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f4.setValue("/powerPrediction");
      int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
      if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
      _jspx_th_c_005furl_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f4, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f5 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f5_reused = false;
    try {
      _jspx_th_c_005furl_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f5.setParent(null);
      // /WEB-INF/inc/top.jsp(108,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f5.setValue("/solution");
      int _jspx_eval_c_005furl_005f5 = _jspx_th_c_005furl_005f5.doStartTag();
      if (_jspx_th_c_005furl_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
      _jspx_th_c_005furl_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f5, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f6 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f6_reused = false;
    try {
      _jspx_th_c_005furl_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f6.setParent(null);
      // /WEB-INF/inc/top.jsp(116,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f6.setValue("/actboard");
      int _jspx_eval_c_005furl_005f6 = _jspx_th_c_005furl_005f6.doStartTag();
      if (_jspx_th_c_005furl_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f6);
      _jspx_th_c_005furl_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f6, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f7 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f7_reused = false;
    try {
      _jspx_th_c_005furl_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f7.setParent(null);
      // /WEB-INF/inc/top.jsp(117,41) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f7.setValue("/news");
      int _jspx_eval_c_005furl_005f7 = _jspx_th_c_005furl_005f7.doStartTag();
      if (_jspx_th_c_005furl_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f7);
      _jspx_th_c_005furl_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f7, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f8 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f8_reused = false;
    try {
      _jspx_th_c_005furl_005f8.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f8.setParent(null);
      // /WEB-INF/inc/top.jsp(120,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f8.setValue("/freeboard");
      int _jspx_eval_c_005furl_005f8 = _jspx_th_c_005furl_005f8.doStartTag();
      if (_jspx_th_c_005furl_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f8);
      _jspx_th_c_005furl_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f8, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/inc/top.jsp(129,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.login or empty sessionScope.login.memId}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<!-- 로그인되어 있지 않은 경우 -->\r\n");
          out.write("				<a href=\"");
          if (_jspx_meth_c_005furl_005f9(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\" target=\"_self\"\r\n");
          out.write("					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">로그인</a>\r\n");
          out.write("				<a href=\"");
          if (_jspx_meth_c_005furl_005f10(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\" target=\"_self\"\r\n");
          out.write("					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">회원\r\n");
          out.write("					가입</a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f9 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f9_reused = false;
    try {
      _jspx_th_c_005furl_005f9.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/inc/top.jsp(132,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f9.setValue("/loginView");
      int _jspx_eval_c_005furl_005f9 = _jspx_th_c_005furl_005f9.doStartTag();
      if (_jspx_th_c_005furl_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f9);
      _jspx_th_c_005furl_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f9, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f10 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f10_reused = false;
    try {
      _jspx_th_c_005furl_005f10.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/inc/top.jsp(134,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f10.setValue("/registView");
      int _jspx_eval_c_005furl_005f10 = _jspx_th_c_005furl_005f10.doStartTag();
      if (_jspx_th_c_005furl_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f10);
      _jspx_th_c_005furl_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f10, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/inc/top.jsp(139,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.login and sessionScope.login.memId eq 'admin'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<!-- 아이디가 'admin'인 경우 -->\r\n");
          out.write("				<a href=\"");
          if (_jspx_meth_c_005furl_005f11(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\" target=\"_self\"\r\n");
          out.write("					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">로그\r\n");
          out.write("					아웃</a>\r\n");
          out.write("				<a href=\"");
          if (_jspx_meth_c_005furl_005f12(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\" target=\"_self\"\r\n");
          out.write("					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">관리자</a>\r\n");
          out.write("\r\n");
          out.write("<!-- 					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">내정보</a> -->\r\n");
          out.write("				");
          out.write("\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f11 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f11_reused = false;
    try {
      _jspx_th_c_005furl_005f11.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/inc/top.jsp(142,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f11.setValue("/logout");
      int _jspx_eval_c_005furl_005f11 = _jspx_th_c_005furl_005f11.doStartTag();
      if (_jspx_th_c_005furl_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f11);
      _jspx_th_c_005furl_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f11, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f12 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f12_reused = false;
    try {
      _jspx_th_c_005furl_005f12.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/inc/top.jsp(145,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f12.setValue("/admin");
      int _jspx_eval_c_005furl_005f12 = _jspx_th_c_005furl_005f12.doStartTag();
      if (_jspx_th_c_005furl_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f12);
      _jspx_th_c_005furl_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f12, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/inc/top.jsp(152,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.login and sessionScope.login.memId ne 'admin' and not fn:containsIgnoreCase(sessionScope.login.memId, 'kakao')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<!-- 로그인되어 있고 일반 사용자인 경우 (카카오 아이디 아닌 경우) -->\r\n");
          out.write("				<a href=\"");
          if (_jspx_meth_c_005furl_005f13(_jspx_th_c_005fif_005f2, _jspx_page_context))
            return true;
          out.write("\" target=\"_self\"\r\n");
          out.write("					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">로그\r\n");
          out.write("					아웃</a>\r\n");
          out.write("				<a href=\"");
          if (_jspx_meth_c_005furl_005f14(_jspx_th_c_005fif_005f2, _jspx_page_context))
            return true;
          out.write("\" target=\"_self\"\r\n");
          out.write("					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.login.memNm}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("					님</a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f13 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f13_reused = false;
    try {
      _jspx_th_c_005furl_005f13.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /WEB-INF/inc/top.jsp(155,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f13.setValue("/logout");
      int _jspx_eval_c_005furl_005f13 = _jspx_th_c_005furl_005f13.doStartTag();
      if (_jspx_th_c_005furl_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f13);
      _jspx_th_c_005furl_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f13, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f14 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f14_reused = false;
    try {
      _jspx_th_c_005furl_005f14.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /WEB-INF/inc/top.jsp(158,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f14.setValue("/mypage");
      int _jspx_eval_c_005furl_005f14 = _jspx_th_c_005furl_005f14.doStartTag();
      if (_jspx_th_c_005furl_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f14);
      _jspx_th_c_005furl_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f14, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/inc/top.jsp(163,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.login and fn:containsIgnoreCase(sessionScope.login.memId, 'kakao')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<!-- 카카오 아이디인 경우 -->\r\n");
          out.write("				<a href=\"");
          if (_jspx_meth_c_005furl_005f15(_jspx_th_c_005fif_005f3, _jspx_page_context))
            return true;
          out.write("\" target=\"_self\"\r\n");
          out.write("					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">\r\n");
          out.write("					로그아웃</a>\r\n");
          out.write("				<a href=\"");
          if (_jspx_meth_c_005furl_005f16(_jspx_th_c_005fif_005f3, _jspx_page_context))
            return true;
          out.write("\" target=\"_self\"\r\n");
          out.write("					class=\"btn btn-primary1 text-secondary d-none d-md-inline-block mr-2\">내정보</a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f15 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f15_reused = false;
    try {
      _jspx_th_c_005furl_005f15.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
      // /WEB-INF/inc/top.jsp(166,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f15.setValue("/kakaologout");
      int _jspx_eval_c_005furl_005f15 = _jspx_th_c_005furl_005f15.doStartTag();
      if (_jspx_th_c_005furl_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f15);
      _jspx_th_c_005furl_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f15, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f16 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f16_reused = false;
    try {
      _jspx_th_c_005furl_005f16.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
      // /WEB-INF/inc/top.jsp(169,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f16.setValue("/mypage");
      int _jspx_eval_c_005furl_005f16 = _jspx_th_c_005furl_005f16.doStartTag();
      if (_jspx_th_c_005furl_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f16);
      _jspx_th_c_005furl_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f16, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f17(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f17 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f17_reused = false;
    try {
      _jspx_th_c_005furl_005f17.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f17.setParent(null);
      // /WEB-INF/views/cbs/result.jsp(207,22) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f17.setValue("/getTotal");
      int _jspx_eval_c_005furl_005f17 = _jspx_th_c_005furl_005f17.doStartTag();
      if (_jspx_th_c_005furl_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f17);
      _jspx_th_c_005furl_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f17, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f18(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f18 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f18_reused = false;
    try {
      _jspx_th_c_005furl_005f18.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f18.setParent(null);
      // /WEB-INF/inc/footer.jsp(30,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f18.setValue("/carbon");
      int _jspx_eval_c_005furl_005f18 = _jspx_th_c_005furl_005f18.doStartTag();
      if (_jspx_th_c_005furl_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f18);
      _jspx_th_c_005furl_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f18, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f19(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f19 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f19_reused = false;
    try {
      _jspx_th_c_005furl_005f19.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f19.setParent(null);
      // /WEB-INF/inc/footer.jsp(32,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f19.setValue("/mbti");
      int _jspx_eval_c_005furl_005f19 = _jspx_th_c_005furl_005f19.doStartTag();
      if (_jspx_th_c_005furl_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f19);
      _jspx_th_c_005furl_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f19, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f20(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f20 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f20_reused = false;
    try {
      _jspx_th_c_005furl_005f20.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f20.setParent(null);
      // /WEB-INF/inc/footer.jsp(34,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f20.setValue("/powerPrediction");
      int _jspx_eval_c_005furl_005f20 = _jspx_th_c_005furl_005f20.doStartTag();
      if (_jspx_th_c_005furl_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f20);
      _jspx_th_c_005furl_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f20, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f21(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f21 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f21_reused = false;
    try {
      _jspx_th_c_005furl_005f21.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f21.setParent(null);
      // /WEB-INF/inc/footer.jsp(36,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f21.setValue("/simulater ");
      int _jspx_eval_c_005furl_005f21 = _jspx_th_c_005furl_005f21.doStartTag();
      if (_jspx_th_c_005furl_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f21);
      _jspx_th_c_005furl_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f21, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f22(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f22 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f22_reused = false;
    try {
      _jspx_th_c_005furl_005f22.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f22.setParent(null);
      // /WEB-INF/inc/footer.jsp(44,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f22.setValue("/freeboard");
      int _jspx_eval_c_005furl_005f22 = _jspx_th_c_005furl_005f22.doStartTag();
      if (_jspx_th_c_005furl_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f22);
      _jspx_th_c_005furl_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f22, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f22_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f23(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f23 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f23_reused = false;
    try {
      _jspx_th_c_005furl_005f23.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f23.setParent(null);
      // /WEB-INF/inc/footer.jsp(46,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f23.setValue("/actdetail");
      int _jspx_eval_c_005furl_005f23 = _jspx_th_c_005furl_005f23.doStartTag();
      if (_jspx_th_c_005furl_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f23);
      _jspx_th_c_005furl_005f23_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f23, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f23_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f24(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f24 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f24_reused = false;
    try {
      _jspx_th_c_005furl_005f24.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f24.setParent(null);
      // /WEB-INF/inc/footer.jsp(48,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f24.setValue("/news");
      int _jspx_eval_c_005furl_005f24 = _jspx_th_c_005furl_005f24.doStartTag();
      if (_jspx_th_c_005furl_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f24);
      _jspx_th_c_005furl_005f24_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f24, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f24_reused);
    }
    return false;
  }
}
